ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB69:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_ADC1_Init(void);
  55:Core/Src/main.c **** static void MX_TIM1_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 3


  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_ADC1_Init();
  94:Core/Src/main.c ****   MX_TIM1_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
  98:Core/Src/main.c ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1); 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     /* USER CODE END WHILE */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 108:Core/Src/main.c **** 	HAL_ADC_Start(&hadc1);
 109:Core/Src/main.c **** 	HAL_ADC_PollForConversion(&hadc1, 10);
 110:Core/Src/main.c **** 	uint16_t adc_val = HAL_ADC_GetValue(&hadc1);
 111:Core/Src/main.c **** 	float vr_val = (float)adc_val/4095*3.0;
 112:Core/Src/main.c **** 	uint32_t active_high =(uint32_t)(vr_val/3.0*333.3);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** 	  
 115:Core/Src/main.c **** 	__HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 166);
 116:Core/Src/main.c **** 	if(vr_val < 1.0)
 117:Core/Src/main.c **** 	{
 118:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,1);
 119:Core/Src/main.c **** 	}else
 120:Core/Src/main.c **** 	{
 121:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,0);
 122:Core/Src/main.c **** 	}
 123:Core/Src/main.c ****   }
 124:Core/Src/main.c ****   /* USER CODE END 3 */
 125:Core/Src/main.c **** }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /**
 128:Core/Src/main.c ****   * @brief System Clock Configuration
 129:Core/Src/main.c ****   * @retval None
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c **** void SystemClock_Config(void)
 132:Core/Src/main.c **** {
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 138:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 4


 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 166:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 167:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 175:Core/Src/main.c ****   * @param None
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** static void MX_ADC1_Init(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Common config
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   hadc1.Instance = ADC1;
 194:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 195:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 196:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 197:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 198:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 199:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 200:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
 203:Core/Src/main.c ****   }
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 5


 205:Core/Src/main.c ****   /** Configure Regular Channel
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 208:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 209:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 210:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 211:Core/Src/main.c ****   {
 212:Core/Src/main.c ****     Error_Handler();
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 222:Core/Src/main.c ****   * @param None
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** static void MX_TIM1_Init(void)
 226:Core/Src/main.c **** {
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 233:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 234:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 235:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 240:Core/Src/main.c ****   htim1.Instance = TIM1;
 241:Core/Src/main.c ****   htim1.Init.Prescaler = 71;
 242:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 243:Core/Src/main.c ****   htim1.Init.Period = 332;
 244:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 245:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 246:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 247:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****     Error_Handler();
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 252:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****     Error_Handler();
 259:Core/Src/main.c ****   }
 260:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 261:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 6


 262:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 267:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 268:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 269:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 270:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 271:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 272:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 273:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 278:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 279:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 280:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 72;
 281:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 282:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 283:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 284:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 291:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief GPIO Initialization Function
 297:Core/Src/main.c ****   * @param None
 298:Core/Src/main.c ****   * @retval None
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c **** static void MX_GPIO_Init(void)
 301:Core/Src/main.c **** {
  26              		.loc 1 301 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 302:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 302 3 view .LVU1
  40              		.loc 1 302 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 7


  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 303:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 304:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 307:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 307 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 307 3 view .LVU4
  49              		.loc 1 307 3 view .LVU5
  50 000e 184B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 307 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 307 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 307 3 view .LVU8
 308:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 308 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 308 3 view .LVU10
  65              		.loc 1 308 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 308 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F02002 		and	r2, r2, #32
  72 0030 0292     		str	r2, [sp, #8]
  73              		.loc 1 308 3 view .LVU13
  74 0032 029A     		ldr	r2, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 308 3 view .LVU14
 309:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 309 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 309 3 view .LVU16
  80              		.loc 1 309 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00402 		orr	r2, r2, #4
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 309 3 view .LVU18
  85 003c 9B69     		ldr	r3, [r3, #24]
  86 003e 03F00403 		and	r3, r3, #4
  87 0042 0393     		str	r3, [sp, #12]
  88              		.loc 1 309 3 view .LVU19
  89 0044 039B     		ldr	r3, [sp, #12]
  90              	.LBE6:
  91              		.loc 1 309 3 view .LVU20
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 8


 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 312:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  92              		.loc 1 312 3 view .LVU21
  93 0046 0B4D     		ldr	r5, .L3+4
  94 0048 2246     		mov	r2, r4
  95 004a 4FF40051 		mov	r1, #8192
  96 004e 2846     		mov	r0, r5
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 315:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  99              		.loc 1 315 3 view .LVU22
 100              		.loc 1 315 23 is_stmt 0 view .LVU23
 101 0054 4FF40053 		mov	r3, #8192
 102 0058 0493     		str	r3, [sp, #16]
 316:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 103              		.loc 1 316 3 is_stmt 1 view .LVU24
 104              		.loc 1 316 24 is_stmt 0 view .LVU25
 105 005a 0123     		movs	r3, #1
 106 005c 0593     		str	r3, [sp, #20]
 317:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 107              		.loc 1 317 3 is_stmt 1 view .LVU26
 108              		.loc 1 317 24 is_stmt 0 view .LVU27
 109 005e 0694     		str	r4, [sp, #24]
 318:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 110              		.loc 1 318 3 is_stmt 1 view .LVU28
 111              		.loc 1 318 25 is_stmt 0 view .LVU29
 112 0060 0223     		movs	r3, #2
 113 0062 0793     		str	r3, [sp, #28]
 319:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 114              		.loc 1 319 3 is_stmt 1 view .LVU30
 115 0064 04A9     		add	r1, sp, #16
 116 0066 2846     		mov	r0, r5
 117 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL1:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 322:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 323:Core/Src/main.c **** }
 119              		.loc 1 323 1 is_stmt 0 view .LVU31
 120 006c 09B0     		add	sp, sp, #36
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 12
 123              		@ sp needed
 124 006e 30BD     		pop	{r4, r5, pc}
 125              	.L4:
 126              		.align	2
 127              	.L3:
 128 0070 00100240 		.word	1073876992
 129 0074 00100140 		.word	1073811456
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.Error_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	Error_Handler
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 9


 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	Error_Handler:
 141              	.LFB70:
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** /* USER CODE END 4 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** /**
 330:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** void Error_Handler(void)
 334:Core/Src/main.c **** {
 142              		.loc 1 334 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ Volatile: function does not return.
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 335:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 336:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 337:Core/Src/main.c ****   __disable_irq();
 148              		.loc 1 337 3 view .LVU33
 149              	.LBB7:
 150              	.LBI7:
 151              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 10


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 11


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 152              		.loc 2 140 27 view .LVU34
 153              	.LBB8:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 12


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 154              		.loc 2 142 3 view .LVU35
 155              		.syntax unified
 156              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 157 0000 72B6     		cpsid i
 158              	@ 0 "" 2
 159              		.thumb
 160              		.syntax unified
 161              	.L6:
 162              	.LBE8:
 163              	.LBE7:
 338:Core/Src/main.c ****   while (1)
 164              		.loc 1 338 3 discriminator 1 view .LVU36
 339:Core/Src/main.c ****   {
 340:Core/Src/main.c ****   }
 165              		.loc 1 340 3 discriminator 1 view .LVU37
 338:Core/Src/main.c ****   while (1)
 166              		.loc 1 338 9 discriminator 1 view .LVU38
 167 0002 FEE7     		b	.L6
 168              		.cfi_endproc
 169              	.LFE70:
 171              		.section	.text.MX_ADC1_Init,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	MX_ADC1_Init:
 178              	.LFB67:
 179:Core/Src/main.c **** 
 179              		.loc 1 179 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 16
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 00B5     		push	{lr}
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 14, -4
 187 0002 85B0     		sub	sp, sp, #20
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 24
 185:Core/Src/main.c **** 
 190              		.loc 1 185 3 view .LVU40
 185:Core/Src/main.c **** 
 191              		.loc 1 185 26 is_stmt 0 view .LVU41
 192 0004 0023     		movs	r3, #0
 193 0006 0193     		str	r3, [sp, #4]
 194 0008 0293     		str	r3, [sp, #8]
 195 000a 0393     		str	r3, [sp, #12]
 193:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 196              		.loc 1 193 3 is_stmt 1 view .LVU42
 193:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 197              		.loc 1 193 18 is_stmt 0 view .LVU43
 198 000c 0F48     		ldr	r0, .L13
 199 000e 104A     		ldr	r2, .L13+4
 200 0010 0260     		str	r2, [r0]
 194:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 13


 201              		.loc 1 194 3 is_stmt 1 view .LVU44
 194:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 202              		.loc 1 194 27 is_stmt 0 view .LVU45
 203 0012 8360     		str	r3, [r0, #8]
 195:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 204              		.loc 1 195 3 is_stmt 1 view .LVU46
 195:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 205              		.loc 1 195 33 is_stmt 0 view .LVU47
 206 0014 0373     		strb	r3, [r0, #12]
 196:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 207              		.loc 1 196 3 is_stmt 1 view .LVU48
 196:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 208              		.loc 1 196 36 is_stmt 0 view .LVU49
 209 0016 0375     		strb	r3, [r0, #20]
 197:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 210              		.loc 1 197 3 is_stmt 1 view .LVU50
 197:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 211              		.loc 1 197 31 is_stmt 0 view .LVU51
 212 0018 4FF46022 		mov	r2, #917504
 213 001c C261     		str	r2, [r0, #28]
 198:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 214              		.loc 1 198 3 is_stmt 1 view .LVU52
 198:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 215              		.loc 1 198 24 is_stmt 0 view .LVU53
 216 001e 4360     		str	r3, [r0, #4]
 199:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 217              		.loc 1 199 3 is_stmt 1 view .LVU54
 199:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 218              		.loc 1 199 30 is_stmt 0 view .LVU55
 219 0020 0123     		movs	r3, #1
 220 0022 0361     		str	r3, [r0, #16]
 200:Core/Src/main.c ****   {
 221              		.loc 1 200 3 is_stmt 1 view .LVU56
 200:Core/Src/main.c ****   {
 222              		.loc 1 200 7 is_stmt 0 view .LVU57
 223 0024 FFF7FEFF 		bl	HAL_ADC_Init
 224              	.LVL2:
 200:Core/Src/main.c ****   {
 225              		.loc 1 200 6 view .LVU58
 226 0028 60B9     		cbnz	r0, .L11
 207:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 227              		.loc 1 207 3 is_stmt 1 view .LVU59
 207:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 228              		.loc 1 207 19 is_stmt 0 view .LVU60
 229 002a 0023     		movs	r3, #0
 230 002c 0193     		str	r3, [sp, #4]
 208:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 231              		.loc 1 208 3 is_stmt 1 view .LVU61
 208:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 232              		.loc 1 208 16 is_stmt 0 view .LVU62
 233 002e 0122     		movs	r2, #1
 234 0030 0292     		str	r2, [sp, #8]
 209:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 235              		.loc 1 209 3 is_stmt 1 view .LVU63
 209:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 236              		.loc 1 209 24 is_stmt 0 view .LVU64
 237 0032 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 14


 210:Core/Src/main.c ****   {
 238              		.loc 1 210 3 is_stmt 1 view .LVU65
 210:Core/Src/main.c ****   {
 239              		.loc 1 210 7 is_stmt 0 view .LVU66
 240 0034 01A9     		add	r1, sp, #4
 241 0036 0548     		ldr	r0, .L13
 242 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 243              	.LVL3:
 210:Core/Src/main.c ****   {
 244              		.loc 1 210 6 view .LVU67
 245 003c 20B9     		cbnz	r0, .L12
 218:Core/Src/main.c **** 
 246              		.loc 1 218 1 view .LVU68
 247 003e 05B0     		add	sp, sp, #20
 248              	.LCFI5:
 249              		.cfi_remember_state
 250              		.cfi_def_cfa_offset 4
 251              		@ sp needed
 252 0040 5DF804FB 		ldr	pc, [sp], #4
 253              	.L11:
 254              	.LCFI6:
 255              		.cfi_restore_state
 202:Core/Src/main.c ****   }
 256              		.loc 1 202 5 is_stmt 1 view .LVU69
 257 0044 FFF7FEFF 		bl	Error_Handler
 258              	.LVL4:
 259              	.L12:
 212:Core/Src/main.c ****   }
 260              		.loc 1 212 5 view .LVU70
 261 0048 FFF7FEFF 		bl	Error_Handler
 262              	.LVL5:
 263              	.L14:
 264              		.align	2
 265              	.L13:
 266 004c 00000000 		.word	.LANCHOR0
 267 0050 00240140 		.word	1073816576
 268              		.cfi_endproc
 269              	.LFE67:
 271              		.section	.text.MX_TIM1_Init,"ax",%progbits
 272              		.align	1
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	MX_TIM1_Init:
 278              	.LFB68:
 226:Core/Src/main.c **** 
 279              		.loc 1 226 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 88
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 10B5     		push	{r4, lr}
 284              	.LCFI7:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 4, -8
 287              		.cfi_offset 14, -4
 288 0002 96B0     		sub	sp, sp, #88
 289              	.LCFI8:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 15


 290              		.cfi_def_cfa_offset 96
 232:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 291              		.loc 1 232 3 view .LVU72
 232:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 292              		.loc 1 232 26 is_stmt 0 view .LVU73
 293 0004 0024     		movs	r4, #0
 294 0006 1294     		str	r4, [sp, #72]
 295 0008 1394     		str	r4, [sp, #76]
 296 000a 1494     		str	r4, [sp, #80]
 297 000c 1594     		str	r4, [sp, #84]
 233:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 298              		.loc 1 233 3 is_stmt 1 view .LVU74
 233:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 299              		.loc 1 233 27 is_stmt 0 view .LVU75
 300 000e 1094     		str	r4, [sp, #64]
 301 0010 1194     		str	r4, [sp, #68]
 234:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 302              		.loc 1 234 3 is_stmt 1 view .LVU76
 234:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 303              		.loc 1 234 22 is_stmt 0 view .LVU77
 304 0012 0994     		str	r4, [sp, #36]
 305 0014 0A94     		str	r4, [sp, #40]
 306 0016 0B94     		str	r4, [sp, #44]
 307 0018 0C94     		str	r4, [sp, #48]
 308 001a 0D94     		str	r4, [sp, #52]
 309 001c 0E94     		str	r4, [sp, #56]
 310 001e 0F94     		str	r4, [sp, #60]
 235:Core/Src/main.c **** 
 311              		.loc 1 235 3 is_stmt 1 view .LVU78
 235:Core/Src/main.c **** 
 312              		.loc 1 235 34 is_stmt 0 view .LVU79
 313 0020 2022     		movs	r2, #32
 314 0022 2146     		mov	r1, r4
 315 0024 01A8     		add	r0, sp, #4
 316 0026 FFF7FEFF 		bl	memset
 317              	.LVL6:
 240:Core/Src/main.c ****   htim1.Init.Prescaler = 71;
 318              		.loc 1 240 3 is_stmt 1 view .LVU80
 240:Core/Src/main.c ****   htim1.Init.Prescaler = 71;
 319              		.loc 1 240 18 is_stmt 0 view .LVU81
 320 002a 2B48     		ldr	r0, .L29
 321 002c 2B4B     		ldr	r3, .L29+4
 322 002e 0360     		str	r3, [r0]
 241:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 323              		.loc 1 241 3 is_stmt 1 view .LVU82
 241:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 324              		.loc 1 241 24 is_stmt 0 view .LVU83
 325 0030 4723     		movs	r3, #71
 326 0032 4360     		str	r3, [r0, #4]
 242:Core/Src/main.c ****   htim1.Init.Period = 332;
 327              		.loc 1 242 3 is_stmt 1 view .LVU84
 242:Core/Src/main.c ****   htim1.Init.Period = 332;
 328              		.loc 1 242 26 is_stmt 0 view .LVU85
 329 0034 8460     		str	r4, [r0, #8]
 243:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 330              		.loc 1 243 3 is_stmt 1 view .LVU86
 243:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 16


 331              		.loc 1 243 21 is_stmt 0 view .LVU87
 332 0036 4FF4A673 		mov	r3, #332
 333 003a C360     		str	r3, [r0, #12]
 244:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 334              		.loc 1 244 3 is_stmt 1 view .LVU88
 244:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 335              		.loc 1 244 28 is_stmt 0 view .LVU89
 336 003c 0461     		str	r4, [r0, #16]
 245:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 337              		.loc 1 245 3 is_stmt 1 view .LVU90
 245:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 338              		.loc 1 245 32 is_stmt 0 view .LVU91
 339 003e 4461     		str	r4, [r0, #20]
 246:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 340              		.loc 1 246 3 is_stmt 1 view .LVU92
 246:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 341              		.loc 1 246 32 is_stmt 0 view .LVU93
 342 0040 8023     		movs	r3, #128
 343 0042 8361     		str	r3, [r0, #24]
 247:Core/Src/main.c ****   {
 344              		.loc 1 247 3 is_stmt 1 view .LVU94
 247:Core/Src/main.c ****   {
 345              		.loc 1 247 7 is_stmt 0 view .LVU95
 346 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 347              	.LVL7:
 247:Core/Src/main.c ****   {
 348              		.loc 1 247 6 view .LVU96
 349 0048 0028     		cmp	r0, #0
 350 004a 38D1     		bne	.L23
 251:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 351              		.loc 1 251 3 is_stmt 1 view .LVU97
 251:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 352              		.loc 1 251 34 is_stmt 0 view .LVU98
 353 004c 4FF48053 		mov	r3, #4096
 354 0050 1293     		str	r3, [sp, #72]
 252:Core/Src/main.c ****   {
 355              		.loc 1 252 3 is_stmt 1 view .LVU99
 252:Core/Src/main.c ****   {
 356              		.loc 1 252 7 is_stmt 0 view .LVU100
 357 0052 12A9     		add	r1, sp, #72
 358 0054 2048     		ldr	r0, .L29
 359 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 360              	.LVL8:
 252:Core/Src/main.c ****   {
 361              		.loc 1 252 6 view .LVU101
 362 005a 0028     		cmp	r0, #0
 363 005c 31D1     		bne	.L24
 256:Core/Src/main.c ****   {
 364              		.loc 1 256 3 is_stmt 1 view .LVU102
 256:Core/Src/main.c ****   {
 365              		.loc 1 256 7 is_stmt 0 view .LVU103
 366 005e 1E48     		ldr	r0, .L29
 367 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 368              	.LVL9:
 256:Core/Src/main.c ****   {
 369              		.loc 1 256 6 view .LVU104
 370 0064 0028     		cmp	r0, #0
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 17


 371 0066 2ED1     		bne	.L25
 260:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 372              		.loc 1 260 3 is_stmt 1 view .LVU105
 260:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 373              		.loc 1 260 37 is_stmt 0 view .LVU106
 374 0068 0023     		movs	r3, #0
 375 006a 1093     		str	r3, [sp, #64]
 261:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 376              		.loc 1 261 3 is_stmt 1 view .LVU107
 261:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 377              		.loc 1 261 33 is_stmt 0 view .LVU108
 378 006c 1193     		str	r3, [sp, #68]
 262:Core/Src/main.c ****   {
 379              		.loc 1 262 3 is_stmt 1 view .LVU109
 262:Core/Src/main.c ****   {
 380              		.loc 1 262 7 is_stmt 0 view .LVU110
 381 006e 10A9     		add	r1, sp, #64
 382 0070 1948     		ldr	r0, .L29
 383 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 384              	.LVL10:
 262:Core/Src/main.c ****   {
 385              		.loc 1 262 6 view .LVU111
 386 0076 40BB     		cbnz	r0, .L26
 266:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 387              		.loc 1 266 3 is_stmt 1 view .LVU112
 266:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 388              		.loc 1 266 20 is_stmt 0 view .LVU113
 389 0078 6023     		movs	r3, #96
 390 007a 0993     		str	r3, [sp, #36]
 267:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 391              		.loc 1 267 3 is_stmt 1 view .LVU114
 267:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 392              		.loc 1 267 19 is_stmt 0 view .LVU115
 393 007c 0022     		movs	r2, #0
 394 007e 0A92     		str	r2, [sp, #40]
 268:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 395              		.loc 1 268 3 is_stmt 1 view .LVU116
 268:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 396              		.loc 1 268 24 is_stmt 0 view .LVU117
 397 0080 0B92     		str	r2, [sp, #44]
 269:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 398              		.loc 1 269 3 is_stmt 1 view .LVU118
 269:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 399              		.loc 1 269 25 is_stmt 0 view .LVU119
 400 0082 0C92     		str	r2, [sp, #48]
 270:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 401              		.loc 1 270 3 is_stmt 1 view .LVU120
 270:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 402              		.loc 1 270 24 is_stmt 0 view .LVU121
 403 0084 0D92     		str	r2, [sp, #52]
 271:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 404              		.loc 1 271 3 is_stmt 1 view .LVU122
 271:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 405              		.loc 1 271 25 is_stmt 0 view .LVU123
 406 0086 0E92     		str	r2, [sp, #56]
 272:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 407              		.loc 1 272 3 is_stmt 1 view .LVU124
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 18


 272:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 408              		.loc 1 272 26 is_stmt 0 view .LVU125
 409 0088 0F92     		str	r2, [sp, #60]
 273:Core/Src/main.c ****   {
 410              		.loc 1 273 3 is_stmt 1 view .LVU126
 273:Core/Src/main.c ****   {
 411              		.loc 1 273 7 is_stmt 0 view .LVU127
 412 008a 09A9     		add	r1, sp, #36
 413 008c 1248     		ldr	r0, .L29
 414 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 415              	.LVL11:
 273:Core/Src/main.c ****   {
 416              		.loc 1 273 6 view .LVU128
 417 0092 E0B9     		cbnz	r0, .L27
 277:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 418              		.loc 1 277 3 is_stmt 1 view .LVU129
 277:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 419              		.loc 1 277 40 is_stmt 0 view .LVU130
 420 0094 0023     		movs	r3, #0
 421 0096 0193     		str	r3, [sp, #4]
 278:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 422              		.loc 1 278 3 is_stmt 1 view .LVU131
 278:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 423              		.loc 1 278 41 is_stmt 0 view .LVU132
 424 0098 0293     		str	r3, [sp, #8]
 279:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 72;
 425              		.loc 1 279 3 is_stmt 1 view .LVU133
 279:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 72;
 426              		.loc 1 279 34 is_stmt 0 view .LVU134
 427 009a 0393     		str	r3, [sp, #12]
 280:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 428              		.loc 1 280 3 is_stmt 1 view .LVU135
 280:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 429              		.loc 1 280 33 is_stmt 0 view .LVU136
 430 009c 4822     		movs	r2, #72
 431 009e 0492     		str	r2, [sp, #16]
 281:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 432              		.loc 1 281 3 is_stmt 1 view .LVU137
 281:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 433              		.loc 1 281 35 is_stmt 0 view .LVU138
 434 00a0 0593     		str	r3, [sp, #20]
 282:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 435              		.loc 1 282 3 is_stmt 1 view .LVU139
 282:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 436              		.loc 1 282 38 is_stmt 0 view .LVU140
 437 00a2 4FF40052 		mov	r2, #8192
 438 00a6 0692     		str	r2, [sp, #24]
 283:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 439              		.loc 1 283 3 is_stmt 1 view .LVU141
 283:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 440              		.loc 1 283 40 is_stmt 0 view .LVU142
 441 00a8 0893     		str	r3, [sp, #32]
 284:Core/Src/main.c ****   {
 442              		.loc 1 284 3 is_stmt 1 view .LVU143
 284:Core/Src/main.c ****   {
 443              		.loc 1 284 7 is_stmt 0 view .LVU144
 444 00aa 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 19


 445 00ac 0A48     		ldr	r0, .L29
 446 00ae FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 447              	.LVL12:
 284:Core/Src/main.c ****   {
 448              		.loc 1 284 6 view .LVU145
 449 00b2 70B9     		cbnz	r0, .L28
 291:Core/Src/main.c **** 
 450              		.loc 1 291 3 is_stmt 1 view .LVU146
 451 00b4 0848     		ldr	r0, .L29
 452 00b6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 453              	.LVL13:
 293:Core/Src/main.c **** 
 454              		.loc 1 293 1 is_stmt 0 view .LVU147
 455 00ba 16B0     		add	sp, sp, #88
 456              	.LCFI9:
 457              		.cfi_remember_state
 458              		.cfi_def_cfa_offset 8
 459              		@ sp needed
 460 00bc 10BD     		pop	{r4, pc}
 461              	.L23:
 462              	.LCFI10:
 463              		.cfi_restore_state
 249:Core/Src/main.c ****   }
 464              		.loc 1 249 5 is_stmt 1 view .LVU148
 465 00be FFF7FEFF 		bl	Error_Handler
 466              	.LVL14:
 467              	.L24:
 254:Core/Src/main.c ****   }
 468              		.loc 1 254 5 view .LVU149
 469 00c2 FFF7FEFF 		bl	Error_Handler
 470              	.LVL15:
 471              	.L25:
 258:Core/Src/main.c ****   }
 472              		.loc 1 258 5 view .LVU150
 473 00c6 FFF7FEFF 		bl	Error_Handler
 474              	.LVL16:
 475              	.L26:
 264:Core/Src/main.c ****   }
 476              		.loc 1 264 5 view .LVU151
 477 00ca FFF7FEFF 		bl	Error_Handler
 478              	.LVL17:
 479              	.L27:
 275:Core/Src/main.c ****   }
 480              		.loc 1 275 5 view .LVU152
 481 00ce FFF7FEFF 		bl	Error_Handler
 482              	.LVL18:
 483              	.L28:
 286:Core/Src/main.c ****   }
 484              		.loc 1 286 5 view .LVU153
 485 00d2 FFF7FEFF 		bl	Error_Handler
 486              	.LVL19:
 487              	.L30:
 488 00d6 00BF     		.align	2
 489              	.L29:
 490 00d8 00000000 		.word	.LANCHOR1
 491 00dc 002C0140 		.word	1073818624
 492              		.cfi_endproc
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 20


 493              	.LFE68:
 495              		.section	.text.SystemClock_Config,"ax",%progbits
 496              		.align	1
 497              		.global	SystemClock_Config
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 502              	SystemClock_Config:
 503              	.LFB66:
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 504              		.loc 1 132 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 80
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 0000 00B5     		push	{lr}
 509              	.LCFI11:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 14, -4
 512 0002 95B0     		sub	sp, sp, #84
 513              	.LCFI12:
 514              		.cfi_def_cfa_offset 88
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 515              		.loc 1 133 3 view .LVU155
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 516              		.loc 1 133 22 is_stmt 0 view .LVU156
 517 0004 2822     		movs	r2, #40
 518 0006 0021     		movs	r1, #0
 519 0008 0DEB0200 		add	r0, sp, r2
 520 000c FFF7FEFF 		bl	memset
 521              	.LVL20:
 134:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 522              		.loc 1 134 3 is_stmt 1 view .LVU157
 134:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 523              		.loc 1 134 22 is_stmt 0 view .LVU158
 524 0010 0023     		movs	r3, #0
 525 0012 0593     		str	r3, [sp, #20]
 526 0014 0693     		str	r3, [sp, #24]
 527 0016 0793     		str	r3, [sp, #28]
 528 0018 0893     		str	r3, [sp, #32]
 529 001a 0993     		str	r3, [sp, #36]
 135:Core/Src/main.c **** 
 530              		.loc 1 135 3 is_stmt 1 view .LVU159
 135:Core/Src/main.c **** 
 531              		.loc 1 135 28 is_stmt 0 view .LVU160
 532 001c 0193     		str	r3, [sp, #4]
 533 001e 0293     		str	r3, [sp, #8]
 534 0020 0393     		str	r3, [sp, #12]
 535 0022 0493     		str	r3, [sp, #16]
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 536              		.loc 1 140 3 is_stmt 1 view .LVU161
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 537              		.loc 1 140 36 is_stmt 0 view .LVU162
 538 0024 0122     		movs	r2, #1
 539 0026 0A92     		str	r2, [sp, #40]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 540              		.loc 1 141 3 is_stmt 1 view .LVU163
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 21


 541              		.loc 1 141 30 is_stmt 0 view .LVU164
 542 0028 4FF48033 		mov	r3, #65536
 543 002c 0B93     		str	r3, [sp, #44]
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 544              		.loc 1 142 3 is_stmt 1 view .LVU165
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 545              		.loc 1 143 3 view .LVU166
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 546              		.loc 1 143 30 is_stmt 0 view .LVU167
 547 002e 0E92     		str	r2, [sp, #56]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 548              		.loc 1 144 3 is_stmt 1 view .LVU168
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 549              		.loc 1 144 34 is_stmt 0 view .LVU169
 550 0030 0222     		movs	r2, #2
 551 0032 1192     		str	r2, [sp, #68]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 552              		.loc 1 145 3 is_stmt 1 view .LVU170
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 553              		.loc 1 145 35 is_stmt 0 view .LVU171
 554 0034 1293     		str	r3, [sp, #72]
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 555              		.loc 1 146 3 is_stmt 1 view .LVU172
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 556              		.loc 1 146 32 is_stmt 0 view .LVU173
 557 0036 4FF4E013 		mov	r3, #1835008
 558 003a 1393     		str	r3, [sp, #76]
 147:Core/Src/main.c ****   {
 559              		.loc 1 147 3 is_stmt 1 view .LVU174
 147:Core/Src/main.c ****   {
 560              		.loc 1 147 7 is_stmt 0 view .LVU175
 561 003c 0AA8     		add	r0, sp, #40
 562 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 563              	.LVL21:
 147:Core/Src/main.c ****   {
 564              		.loc 1 147 6 view .LVU176
 565 0042 C8B9     		cbnz	r0, .L36
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 566              		.loc 1 154 3 is_stmt 1 view .LVU177
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 567              		.loc 1 154 31 is_stmt 0 view .LVU178
 568 0044 0F23     		movs	r3, #15
 569 0046 0593     		str	r3, [sp, #20]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 570              		.loc 1 156 3 is_stmt 1 view .LVU179
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 571              		.loc 1 156 34 is_stmt 0 view .LVU180
 572 0048 0221     		movs	r1, #2
 573 004a 0691     		str	r1, [sp, #24]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 574              		.loc 1 157 3 is_stmt 1 view .LVU181
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 575              		.loc 1 157 35 is_stmt 0 view .LVU182
 576 004c 0023     		movs	r3, #0
 577 004e 0793     		str	r3, [sp, #28]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 578              		.loc 1 158 3 is_stmt 1 view .LVU183
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 22


 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 579              		.loc 1 158 36 is_stmt 0 view .LVU184
 580 0050 4FF48062 		mov	r2, #1024
 581 0054 0892     		str	r2, [sp, #32]
 159:Core/Src/main.c **** 
 582              		.loc 1 159 3 is_stmt 1 view .LVU185
 159:Core/Src/main.c **** 
 583              		.loc 1 159 36 is_stmt 0 view .LVU186
 584 0056 0993     		str	r3, [sp, #36]
 161:Core/Src/main.c ****   {
 585              		.loc 1 161 3 is_stmt 1 view .LVU187
 161:Core/Src/main.c ****   {
 586              		.loc 1 161 7 is_stmt 0 view .LVU188
 587 0058 05A8     		add	r0, sp, #20
 588 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 589              	.LVL22:
 161:Core/Src/main.c ****   {
 590              		.loc 1 161 6 view .LVU189
 591 005e 68B9     		cbnz	r0, .L37
 165:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 592              		.loc 1 165 3 is_stmt 1 view .LVU190
 165:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 593              		.loc 1 165 38 is_stmt 0 view .LVU191
 594 0060 0223     		movs	r3, #2
 595 0062 0193     		str	r3, [sp, #4]
 166:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 596              		.loc 1 166 3 is_stmt 1 view .LVU192
 166:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 597              		.loc 1 166 35 is_stmt 0 view .LVU193
 598 0064 4FF40043 		mov	r3, #32768
 599 0068 0393     		str	r3, [sp, #12]
 167:Core/Src/main.c ****   {
 600              		.loc 1 167 3 is_stmt 1 view .LVU194
 167:Core/Src/main.c ****   {
 601              		.loc 1 167 7 is_stmt 0 view .LVU195
 602 006a 01A8     		add	r0, sp, #4
 603 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 604              	.LVL23:
 167:Core/Src/main.c ****   {
 605              		.loc 1 167 6 view .LVU196
 606 0070 30B9     		cbnz	r0, .L38
 171:Core/Src/main.c **** 
 607              		.loc 1 171 1 view .LVU197
 608 0072 15B0     		add	sp, sp, #84
 609              	.LCFI13:
 610              		.cfi_remember_state
 611              		.cfi_def_cfa_offset 4
 612              		@ sp needed
 613 0074 5DF804FB 		ldr	pc, [sp], #4
 614              	.L36:
 615              	.LCFI14:
 616              		.cfi_restore_state
 149:Core/Src/main.c ****   }
 617              		.loc 1 149 5 is_stmt 1 view .LVU198
 618 0078 FFF7FEFF 		bl	Error_Handler
 619              	.LVL24:
 620              	.L37:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 23


 163:Core/Src/main.c ****   }
 621              		.loc 1 163 5 view .LVU199
 622 007c FFF7FEFF 		bl	Error_Handler
 623              	.LVL25:
 624              	.L38:
 169:Core/Src/main.c ****   }
 625              		.loc 1 169 5 view .LVU200
 626 0080 FFF7FEFF 		bl	Error_Handler
 627              	.LVL26:
 628              		.cfi_endproc
 629              	.LFE66:
 631              		.global	__aeabi_ui2f
 632              		.global	__aeabi_fdiv
 633              		.global	__aeabi_fmul
 634              		.global	__aeabi_fcmplt
 635              		.section	.text.main,"ax",%progbits
 636              		.align	1
 637              		.global	main
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 642              	main:
 643              	.LFB65:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 644              		.loc 1 70 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 10B5     		push	{r4, lr}
 649              	.LCFI15:
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 4, -8
 652              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 653              		.loc 1 78 3 view .LVU202
 654 0002 FFF7FEFF 		bl	HAL_Init
 655              	.LVL27:
  85:Core/Src/main.c **** 
 656              		.loc 1 85 3 view .LVU203
 657 0006 FFF7FEFF 		bl	SystemClock_Config
 658              	.LVL28:
  92:Core/Src/main.c ****   MX_ADC1_Init();
 659              		.loc 1 92 3 view .LVU204
 660 000a FFF7FEFF 		bl	MX_GPIO_Init
 661              	.LVL29:
  93:Core/Src/main.c ****   MX_TIM1_Init();
 662              		.loc 1 93 3 view .LVU205
 663 000e FFF7FEFF 		bl	MX_ADC1_Init
 664              	.LVL30:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 665              		.loc 1 94 3 view .LVU206
 666 0012 FFF7FEFF 		bl	MX_TIM1_Init
 667              	.LVL31:
  97:Core/Src/main.c ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1); 
 668              		.loc 1 97 3 view .LVU207
 669 0016 1A4C     		ldr	r4, .L48
 670 0018 0021     		movs	r1, #0
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 24


 671 001a 2046     		mov	r0, r4
 672 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 673              	.LVL32:
  98:Core/Src/main.c ****   /* USER CODE END 2 */
 674              		.loc 1 98 3 view .LVU208
 675 0020 0021     		movs	r1, #0
 676 0022 2046     		mov	r0, r4
 677 0024 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 678              	.LVL33:
 679 0028 05E0     		b	.L40
 680              	.LVL34:
 681              	.L47:
 682              	.LBB9:
 118:Core/Src/main.c **** 	}else
 683              		.loc 1 118 3 view .LVU209
 684 002a 0122     		movs	r2, #1
 685 002c 4FF40051 		mov	r1, #8192
 686 0030 1448     		ldr	r0, .L48+4
 687 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 688              	.LVL35:
 689              	.L40:
 118:Core/Src/main.c **** 	}else
 690              		.loc 1 118 3 is_stmt 0 view .LVU210
 691              	.LBE9:
 103:Core/Src/main.c ****   {
 692              		.loc 1 103 3 is_stmt 1 view .LVU211
 693              	.LBB10:
 108:Core/Src/main.c **** 	HAL_ADC_PollForConversion(&hadc1, 10);
 694              		.loc 1 108 2 view .LVU212
 695 0036 144C     		ldr	r4, .L48+8
 696 0038 2046     		mov	r0, r4
 697 003a FFF7FEFF 		bl	HAL_ADC_Start
 698              	.LVL36:
 109:Core/Src/main.c **** 	uint16_t adc_val = HAL_ADC_GetValue(&hadc1);
 699              		.loc 1 109 2 view .LVU213
 700 003e 0A21     		movs	r1, #10
 701 0040 2046     		mov	r0, r4
 702 0042 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 703              	.LVL37:
 110:Core/Src/main.c **** 	float vr_val = (float)adc_val/4095*3.0;
 704              		.loc 1 110 2 view .LVU214
 110:Core/Src/main.c **** 	float vr_val = (float)adc_val/4095*3.0;
 705              		.loc 1 110 21 is_stmt 0 view .LVU215
 706 0046 2046     		mov	r0, r4
 707 0048 FFF7FEFF 		bl	HAL_ADC_GetValue
 708              	.LVL38:
 111:Core/Src/main.c **** 	uint32_t active_high =(uint32_t)(vr_val/3.0*333.3);
 709              		.loc 1 111 2 is_stmt 1 view .LVU216
 111:Core/Src/main.c **** 	uint32_t active_high =(uint32_t)(vr_val/3.0*333.3);
 710              		.loc 1 111 17 is_stmt 0 view .LVU217
 711 004c 80B2     		uxth	r0, r0
 111:Core/Src/main.c **** 	uint32_t active_high =(uint32_t)(vr_val/3.0*333.3);
 712              		.loc 1 111 17 view .LVU218
 713 004e FFF7FEFF 		bl	__aeabi_ui2f
 714              	.LVL39:
 111:Core/Src/main.c **** 	uint32_t active_high =(uint32_t)(vr_val/3.0*333.3);
 715              		.loc 1 111 31 view .LVU219
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 25


 716 0052 0E49     		ldr	r1, .L48+12
 717 0054 FFF7FEFF 		bl	__aeabi_fdiv
 718              	.LVL40:
 111:Core/Src/main.c **** 	uint32_t active_high =(uint32_t)(vr_val/3.0*333.3);
 719              		.loc 1 111 8 view .LVU220
 720 0058 0D49     		ldr	r1, .L48+16
 721 005a FFF7FEFF 		bl	__aeabi_fmul
 722              	.LVL41:
 112:Core/Src/main.c **** 
 723              		.loc 1 112 2 is_stmt 1 view .LVU221
 115:Core/Src/main.c **** 	if(vr_val < 1.0)
 724              		.loc 1 115 2 view .LVU222
 725 005e 084B     		ldr	r3, .L48
 726 0060 1B68     		ldr	r3, [r3]
 727 0062 A622     		movs	r2, #166
 728 0064 5A63     		str	r2, [r3, #52]
 116:Core/Src/main.c **** 	{
 729              		.loc 1 116 2 view .LVU223
 116:Core/Src/main.c **** 	{
 730              		.loc 1 116 4 is_stmt 0 view .LVU224
 731 0066 4FF07E51 		mov	r1, #1065353216
 732 006a FFF7FEFF 		bl	__aeabi_fcmplt
 733              	.LVL42:
 116:Core/Src/main.c **** 	{
 734              		.loc 1 116 4 view .LVU225
 735 006e 0028     		cmp	r0, #0
 736 0070 DBD1     		bne	.L47
 121:Core/Src/main.c **** 	}
 737              		.loc 1 121 3 is_stmt 1 view .LVU226
 738 0072 0022     		movs	r2, #0
 739 0074 4FF40051 		mov	r1, #8192
 740 0078 0248     		ldr	r0, .L48+4
 741 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 742              	.LVL43:
 743 007e DAE7     		b	.L40
 744              	.L49:
 745              		.align	2
 746              	.L48:
 747 0080 00000000 		.word	.LANCHOR1
 748 0084 00100140 		.word	1073811456
 749 0088 00000000 		.word	.LANCHOR0
 750 008c 00F07F45 		.word	1166012416
 751 0090 00004040 		.word	1077936128
 752              	.LBE10:
 753              		.cfi_endproc
 754              	.LFE65:
 756              		.global	htim1
 757              		.global	hadc1
 758              		.section	.bss.hadc1,"aw",%nobits
 759              		.align	2
 760              		.set	.LANCHOR0,. + 0
 763              	hadc1:
 764 0000 00000000 		.space	48
 764      00000000 
 764      00000000 
 764      00000000 
 764      00000000 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 26


 765              		.section	.bss.htim1,"aw",%nobits
 766              		.align	2
 767              		.set	.LANCHOR1,. + 0
 770              	htim1:
 771 0000 00000000 		.space	72
 771      00000000 
 771      00000000 
 771      00000000 
 771      00000000 
 772              		.text
 773              	.Letext0:
 774              		.file 3 "d:\\arm-gcc\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 775              		.file 4 "d:\\arm-gcc\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 776              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 777              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 778              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 779              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 780              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 781              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 782              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 783              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 784              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 785              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 786              		.file 15 "Core/Inc/main.h"
 787              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 788              		.file 17 "<built-in>"
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:128    .text.MX_GPIO_Init:00000070 $d
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:134    .text.Error_Handler:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:140    .text.Error_Handler:00000000 Error_Handler
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:172    .text.MX_ADC1_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:177    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:266    .text.MX_ADC1_Init:0000004c $d
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:272    .text.MX_TIM1_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:277    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:490    .text.MX_TIM1_Init:000000d8 $d
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:496    .text.SystemClock_Config:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:502    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:636    .text.main:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:642    .text.main:00000000 main
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:747    .text.main:00000080 $d
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:770    .bss.htim1:00000000 htim1
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:763    .bss.hadc1:00000000 hadc1
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:759    .bss.hadc1:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccG7aqnQ.s:766    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_fcmplt
HAL_Init
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
