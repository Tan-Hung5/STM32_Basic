ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB252:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "stdint.h"
  27:Core/Src/main.c **** #include "string.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart3;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** osThreadId Task1Handle;
  53:Core/Src/main.c **** osThreadId Task2Handle;
  54:Core/Src/main.c **** osThreadId Task3Handle;
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_ADC1_Init(void);
  63:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  64:Core/Src/main.c **** static void MX_I2C1_Init(void);
  65:Core/Src/main.c **** void StartTask1(void const * argument);
  66:Core/Src/main.c **** void StartTask2(void const * argument);
  67:Core/Src/main.c **** void StartTask3(void const * argument);
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PFP */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  74:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE END 0 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /**
  79:Core/Src/main.c ****   * @brief  The application entry point.
  80:Core/Src/main.c ****   * @retval int
  81:Core/Src/main.c ****   */
  82:Core/Src/main.c **** int main(void)
  83:Core/Src/main.c **** {
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize all configured peripherals */
 105:Core/Src/main.c ****   MX_GPIO_Init();
 106:Core/Src/main.c ****   MX_ADC1_Init();
 107:Core/Src/main.c ****   MX_USART3_UART_Init();
 108:Core/Src/main.c ****   MX_I2C1_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 114:Core/Src/main.c ****   /* add mutexes, ... */
 115:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 118:Core/Src/main.c ****   /* add semaphores, ... */
 119:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 122:Core/Src/main.c ****   /* start timers, add new ones, ... */
 123:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 126:Core/Src/main.c ****   /* add queues, ... */
 127:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Create the thread(s) */
 130:Core/Src/main.c ****   /* definition and creation of Task1 */
 131:Core/Src/main.c ****   osThreadDef(Task1, StartTask1, osPriorityNormal, 0, 128);
 132:Core/Src/main.c ****   Task1Handle = osThreadCreate(osThread(Task1), NULL);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* definition and creation of Task2 */
 135:Core/Src/main.c ****   osThreadDef(Task2, StartTask2, osPriorityIdle, 0, 128);
 136:Core/Src/main.c ****   Task2Handle = osThreadCreate(osThread(Task2), NULL);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* definition and creation of Task3 */
 139:Core/Src/main.c ****   osThreadDef(Task3, StartTask3, osPriorityIdle, 0, 128);
 140:Core/Src/main.c ****   Task3Handle = osThreadCreate(osThread(Task3), NULL);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 143:Core/Src/main.c ****   /* add threads, ... */
 144:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 4


 146:Core/Src/main.c ****   /* Start scheduler */
 147:Core/Src/main.c ****   osKernelStart();
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 150:Core/Src/main.c ****   /* Infinite loop */
 151:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 152:Core/Src/main.c ****   while (1)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     /* USER CODE END WHILE */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   /* USER CODE END 3 */
 159:Core/Src/main.c **** }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief System Clock Configuration
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** void SystemClock_Config(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 168:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 173:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 176:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 186:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 194:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 5


 203:Core/Src/main.c ****   }
 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /**
 207:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 208:Core/Src/main.c ****   * @param None
 209:Core/Src/main.c ****   * @retval None
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c **** static void MX_ADC1_Init(void)
 212:Core/Src/main.c **** {
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   hadc1.Instance = ADC1;
 227:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 228:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 229:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 230:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 231:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 232:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 233:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 234:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 235:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 236:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 237:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 238:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 246:Core/Src/main.c ****   sConfig.Rank = 1;
 247:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 248:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief I2C1 Initialization Function
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 6


 260:Core/Src/main.c ****   * @param None
 261:Core/Src/main.c ****   * @retval None
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** static void MX_I2C1_Init(void)
 264:Core/Src/main.c **** {
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 273:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 274:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 275:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 276:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 277:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 278:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 279:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 280:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 281:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 282:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief USART3 Initialization Function
 294:Core/Src/main.c ****   * @param None
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 298:Core/Src/main.c **** {
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 307:Core/Src/main.c ****   huart3.Instance = USART3;
 308:Core/Src/main.c ****   huart3.Init.BaudRate = 9600;
 309:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 310:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 311:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 312:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 313:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 314:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 315:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 316:Core/Src/main.c ****   {
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 7


 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
 319:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /**
 326:Core/Src/main.c ****   * @brief GPIO Initialization Function
 327:Core/Src/main.c ****   * @param None
 328:Core/Src/main.c ****   * @retval None
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c **** static void MX_GPIO_Init(void)
 331:Core/Src/main.c **** {
  28              		.loc 1 331 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 72
 332:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 332 3 view .LVU1
  46              		.loc 1 332 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0594     		str	r4, [sp, #20]
  49 000a 0694     		str	r4, [sp, #24]
  50 000c 0794     		str	r4, [sp, #28]
  51 000e 0894     		str	r4, [sp, #32]
  52 0010 0994     		str	r4, [sp, #36]
 333:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 334:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 337:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  53              		.loc 1 337 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 337 3 view .LVU4
  56 0012 0094     		str	r4, [sp]
  57              		.loc 1 337 3 view .LVU5
  58 0014 3A4B     		ldr	r3, .L3
  59 0016 1A6B     		ldr	r2, [r3, #48]
  60 0018 42F08002 		orr	r2, r2, #128
  61 001c 1A63     		str	r2, [r3, #48]
  62              		.loc 1 337 3 view .LVU6
  63 001e 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 8


  64 0020 02F08002 		and	r2, r2, #128
  65 0024 0092     		str	r2, [sp]
  66              		.loc 1 337 3 view .LVU7
  67 0026 009A     		ldr	r2, [sp]
  68              	.LBE4:
  69              		.loc 1 337 3 view .LVU8
 338:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 338 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 338 3 view .LVU10
  73 0028 0194     		str	r4, [sp, #4]
  74              		.loc 1 338 3 view .LVU11
  75 002a 1A6B     		ldr	r2, [r3, #48]
  76 002c 42F00402 		orr	r2, r2, #4
  77 0030 1A63     		str	r2, [r3, #48]
  78              		.loc 1 338 3 view .LVU12
  79 0032 1A6B     		ldr	r2, [r3, #48]
  80 0034 02F00402 		and	r2, r2, #4
  81 0038 0192     		str	r2, [sp, #4]
  82              		.loc 1 338 3 view .LVU13
  83 003a 019A     		ldr	r2, [sp, #4]
  84              	.LBE5:
  85              		.loc 1 338 3 view .LVU14
 339:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  86              		.loc 1 339 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 339 3 view .LVU16
  89 003c 0294     		str	r4, [sp, #8]
  90              		.loc 1 339 3 view .LVU17
  91 003e 1A6B     		ldr	r2, [r3, #48]
  92 0040 42F00102 		orr	r2, r2, #1
  93 0044 1A63     		str	r2, [r3, #48]
  94              		.loc 1 339 3 view .LVU18
  95 0046 1A6B     		ldr	r2, [r3, #48]
  96 0048 02F00102 		and	r2, r2, #1
  97 004c 0292     		str	r2, [sp, #8]
  98              		.loc 1 339 3 view .LVU19
  99 004e 029A     		ldr	r2, [sp, #8]
 100              	.LBE6:
 101              		.loc 1 339 3 view .LVU20
 340:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 340 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 340 3 view .LVU22
 105 0050 0394     		str	r4, [sp, #12]
 106              		.loc 1 340 3 view .LVU23
 107 0052 1A6B     		ldr	r2, [r3, #48]
 108 0054 42F00202 		orr	r2, r2, #2
 109 0058 1A63     		str	r2, [r3, #48]
 110              		.loc 1 340 3 view .LVU24
 111 005a 1A6B     		ldr	r2, [r3, #48]
 112 005c 02F00202 		and	r2, r2, #2
 113 0060 0392     		str	r2, [sp, #12]
 114              		.loc 1 340 3 view .LVU25
 115 0062 039A     		ldr	r2, [sp, #12]
 116              	.LBE7:
 117              		.loc 1 340 3 view .LVU26
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 9


 341:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 341 3 view .LVU27
 119              	.LBB8:
 120              		.loc 1 341 3 view .LVU28
 121 0064 0494     		str	r4, [sp, #16]
 122              		.loc 1 341 3 view .LVU29
 123 0066 1A6B     		ldr	r2, [r3, #48]
 124 0068 42F00802 		orr	r2, r2, #8
 125 006c 1A63     		str	r2, [r3, #48]
 126              		.loc 1 341 3 view .LVU30
 127 006e 1B6B     		ldr	r3, [r3, #48]
 128 0070 03F00803 		and	r3, r3, #8
 129 0074 0493     		str	r3, [sp, #16]
 130              		.loc 1 341 3 view .LVU31
 131 0076 049B     		ldr	r3, [sp, #16]
 132              	.LBE8:
 133              		.loc 1 341 3 view .LVU32
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 344:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, led_1_Pin|led_2_Pin|led_7_Pin, GPIO_PIN_RESET);
 134              		.loc 1 344 3 view .LVU33
 135 0078 DFF89090 		ldr	r9, .L3+12
 136 007c 2246     		mov	r2, r4
 137 007e 1521     		movs	r1, #21
 138 0080 4846     		mov	r0, r9
 139 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 140              	.LVL0:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 347:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, led_3_Pin|led_4_Pin|led_5_Pin|led_6_Pin, GPIO_PIN_RESET);
 141              		.loc 1 347 3 view .LVU34
 142 0086 DFF88880 		ldr	r8, .L3+16
 143 008a 2246     		mov	r2, r4
 144 008c 5521     		movs	r1, #85
 145 008e 4046     		mov	r0, r8
 146 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL1:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 350:Core/Src/main.c ****   HAL_GPIO_WritePin(led_8_GPIO_Port, led_8_Pin, GPIO_PIN_RESET);
 148              		.loc 1 350 3 view .LVU35
 149 0094 1B4F     		ldr	r7, .L3+4
 150 0096 2246     		mov	r2, r4
 151 0098 0121     		movs	r1, #1
 152 009a 3846     		mov	r0, r7
 153 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL2:
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 353:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET);
 155              		.loc 1 353 3 view .LVU36
 156 00a0 194E     		ldr	r6, .L3+8
 157 00a2 2246     		mov	r2, r4
 158 00a4 4FF48041 		mov	r1, #16384
 159 00a8 3046     		mov	r0, r6
 160 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL3:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 10


 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /*Configure GPIO pins : led_1_Pin led_2_Pin led_7_Pin */
 356:Core/Src/main.c ****   GPIO_InitStruct.Pin = led_1_Pin|led_2_Pin|led_7_Pin;
 162              		.loc 1 356 3 view .LVU37
 163              		.loc 1 356 23 is_stmt 0 view .LVU38
 164 00ae 1523     		movs	r3, #21
 165 00b0 0593     		str	r3, [sp, #20]
 357:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 166              		.loc 1 357 3 is_stmt 1 view .LVU39
 167              		.loc 1 357 24 is_stmt 0 view .LVU40
 168 00b2 0125     		movs	r5, #1
 169 00b4 0695     		str	r5, [sp, #24]
 358:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 358 3 is_stmt 1 view .LVU41
 171              		.loc 1 358 24 is_stmt 0 view .LVU42
 172 00b6 0794     		str	r4, [sp, #28]
 359:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 173              		.loc 1 359 3 is_stmt 1 view .LVU43
 174              		.loc 1 359 25 is_stmt 0 view .LVU44
 175 00b8 0894     		str	r4, [sp, #32]
 360:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 176              		.loc 1 360 3 is_stmt 1 view .LVU45
 177 00ba 05A9     		add	r1, sp, #20
 178 00bc 4846     		mov	r0, r9
 179 00be FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL4:
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /*Configure GPIO pins : led_3_Pin led_4_Pin led_5_Pin led_6_Pin */
 363:Core/Src/main.c ****   GPIO_InitStruct.Pin = led_3_Pin|led_4_Pin|led_5_Pin|led_6_Pin;
 181              		.loc 1 363 3 view .LVU46
 182              		.loc 1 363 23 is_stmt 0 view .LVU47
 183 00c2 5523     		movs	r3, #85
 184 00c4 0593     		str	r3, [sp, #20]
 364:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 364 3 is_stmt 1 view .LVU48
 186              		.loc 1 364 24 is_stmt 0 view .LVU49
 187 00c6 0695     		str	r5, [sp, #24]
 365:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 365 3 is_stmt 1 view .LVU50
 189              		.loc 1 365 24 is_stmt 0 view .LVU51
 190 00c8 0794     		str	r4, [sp, #28]
 366:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 366 3 is_stmt 1 view .LVU52
 192              		.loc 1 366 25 is_stmt 0 view .LVU53
 193 00ca 0894     		str	r4, [sp, #32]
 367:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 194              		.loc 1 367 3 is_stmt 1 view .LVU54
 195 00cc 05A9     		add	r1, sp, #20
 196 00ce 4046     		mov	r0, r8
 197 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL5:
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /*Configure GPIO pin : led_8_Pin */
 370:Core/Src/main.c ****   GPIO_InitStruct.Pin = led_8_Pin;
 199              		.loc 1 370 3 view .LVU55
 200              		.loc 1 370 23 is_stmt 0 view .LVU56
 201 00d4 0595     		str	r5, [sp, #20]
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 11


 371:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 202              		.loc 1 371 3 is_stmt 1 view .LVU57
 203              		.loc 1 371 24 is_stmt 0 view .LVU58
 204 00d6 0695     		str	r5, [sp, #24]
 372:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 372 3 is_stmt 1 view .LVU59
 206              		.loc 1 372 24 is_stmt 0 view .LVU60
 207 00d8 0794     		str	r4, [sp, #28]
 373:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 373 3 is_stmt 1 view .LVU61
 209              		.loc 1 373 25 is_stmt 0 view .LVU62
 210 00da 0894     		str	r4, [sp, #32]
 374:Core/Src/main.c ****   HAL_GPIO_Init(led_8_GPIO_Port, &GPIO_InitStruct);
 211              		.loc 1 374 3 is_stmt 1 view .LVU63
 212 00dc 05A9     		add	r1, sp, #20
 213 00de 3846     		mov	r0, r7
 214 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL6:
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /*Configure GPIO pin : PD14 */
 377:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 216              		.loc 1 377 3 view .LVU64
 217              		.loc 1 377 23 is_stmt 0 view .LVU65
 218 00e4 4FF48043 		mov	r3, #16384
 219 00e8 0593     		str	r3, [sp, #20]
 378:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 378 3 is_stmt 1 view .LVU66
 221              		.loc 1 378 24 is_stmt 0 view .LVU67
 222 00ea 0695     		str	r5, [sp, #24]
 379:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 379 3 is_stmt 1 view .LVU68
 224              		.loc 1 379 24 is_stmt 0 view .LVU69
 225 00ec 0794     		str	r4, [sp, #28]
 380:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 380 3 is_stmt 1 view .LVU70
 227              		.loc 1 380 25 is_stmt 0 view .LVU71
 228 00ee 0894     		str	r4, [sp, #32]
 381:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 229              		.loc 1 381 3 is_stmt 1 view .LVU72
 230 00f0 05A9     		add	r1, sp, #20
 231 00f2 3046     		mov	r0, r6
 232 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL7:
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 384:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 385:Core/Src/main.c **** }
 234              		.loc 1 385 1 is_stmt 0 view .LVU73
 235 00f8 0BB0     		add	sp, sp, #44
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 28
 238              		@ sp needed
 239 00fa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 240              	.L4:
 241 00fe 00BF     		.align	2
 242              	.L3:
 243 0100 00380240 		.word	1073887232
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 12


 244 0104 00040240 		.word	1073873920
 245 0108 000C0240 		.word	1073875968
 246 010c 00080240 		.word	1073874944
 247 0110 00000240 		.word	1073872896
 248              		.cfi_endproc
 249              	.LFE252:
 251              		.section	.text.StartTask1,"ax",%progbits
 252              		.align	1
 253              		.global	StartTask1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	StartTask1:
 259              	.LVL8:
 260              	.LFB266:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 388:Core/Src/main.c **** const uint8_t DS1307_ADDRESS_WRITE =  0xD0; 
 389:Core/Src/main.c **** const uint8_t DS1307_ADDRESS_READ =  0xD1;
 390:Core/Src/main.c **** const uint8_t LCD_ADDRESS = 0x4E;
 391:Core/Src/main.c **** uint8_t Dec_to_BCD(uint8_t dec) {
 392:Core/Src/main.c ****     return ((dec / 10) << 4) | (dec % 10);
 393:Core/Src/main.c **** }
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** uint8_t BCD_to_Dec(uint8_t bcd) {
 396:Core/Src/main.c ****     return ((bcd >> 4) * 10) + (bcd & 0x0F);
 397:Core/Src/main.c **** }
 398:Core/Src/main.c **** void DS1307_SetTime(uint8_t hours, uint8_t minutes, uint8_t seconds) 
 399:Core/Src/main.c **** {
 400:Core/Src/main.c ****     uint8_t data[4];
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** 	data[0] = 0x00;
 403:Core/Src/main.c ****     data[1] = Dec_to_BCD(seconds);
 404:Core/Src/main.c **** 	data[2] = Dec_to_BCD(minutes);
 405:Core/Src/main.c ****     data[3] = Dec_to_BCD(hours);
 406:Core/Src/main.c ****    
 407:Core/Src/main.c **** 	
 408:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1,DS1307_ADDRESS_WRITE , &data[0], 4, 100);
 409:Core/Src/main.c ****     
 410:Core/Src/main.c **** }
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** void DS1307_SetDate(uint8_t day, uint8_t month, uint16_t year) 
 413:Core/Src/main.c **** {
 414:Core/Src/main.c ****     uint8_t data[4];
 415:Core/Src/main.c **** 	
 416:Core/Src/main.c **** 	data[0] = 0x04;
 417:Core/Src/main.c ****     data[1] = Dec_to_BCD(day);
 418:Core/Src/main.c ****     data[2] = Dec_to_BCD(month);  
 419:Core/Src/main.c **** 	data[3] = Dec_to_BCD(year);      
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, DS1307_ADDRESS_WRITE , &data[0], 4, 100);
 422:Core/Src/main.c **** }
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** void DS1307_GetTime(uint8_t *hours, uint8_t *minutes, uint8_t *seconds) 
 425:Core/Src/main.c **** {
 426:Core/Src/main.c ****     uint8_t data[3];
 427:Core/Src/main.c **** 	uint8_t reg = 0x00;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 13


 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, DS1307_ADDRESS_WRITE , &reg, 1, 10); 
 430:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 50);     
 431:Core/Src/main.c ****     *seconds = BCD_to_Dec(data[0]);
 432:Core/Src/main.c **** 	*minutes = BCD_to_Dec(data[1]);
 433:Core/Src/main.c ****     *hours   = BCD_to_Dec(data[2]);
 434:Core/Src/main.c **** }
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** void DS1307_GetDate(uint8_t *day, uint8_t *month, uint16_t *year) 
 437:Core/Src/main.c **** {
 438:Core/Src/main.c ****     uint8_t data[3];
 439:Core/Src/main.c **** 	uint8_t reg = 0x04;
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, DS1307_ADDRESS_WRITE,&reg, 1, 100); 
 442:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 100);   
 443:Core/Src/main.c ****     *day    = BCD_to_Dec(data[0]);
 444:Core/Src/main.c ****     *month  = BCD_to_Dec(data[1]);
 445:Core/Src/main.c ****     *year   = 2000 + BCD_to_Dec(data[2]);
 446:Core/Src/main.c **** }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** void lcd_write_nibble(uint8_t rs, uint8_t data)
 449:Core/Src/main.c **** {
 450:Core/Src/main.c **** 	uint8_t dat_lcd;
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** 	dat_lcd = ((data << 4) & 0xF0) | 0x0C | rs;
 453:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** 	dat_lcd = ((data << 4) & 0xF0) | 0x08 | rs;
 456:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 457:Core/Src/main.c **** 
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** }
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** void lcd_send_cmd(uint8_t cmd)
 463:Core/Src/main.c **** {
 464:Core/Src/main.c **** 	lcd_write_nibble(0, (cmd>>4)&0x0F);
 465:Core/Src/main.c **** 	lcd_write_nibble(0, cmd&0x0F);
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 	HAL_Delay(2);
 468:Core/Src/main.c **** }
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** void lcd_send_data(uint8_t data)
 472:Core/Src/main.c **** {
 473:Core/Src/main.c **** 	lcd_write_nibble(1, (data>>4)&0x0F);
 474:Core/Src/main.c **** 	lcd_write_nibble(1, data & 0x0F);
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** 	HAL_Delay(2);
 477:Core/Src/main.c **** }
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** void lcd_init(void)
 481:Core/Src/main.c **** {
 482:Core/Src/main.c **** 	HAL_Delay(20);
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(5);
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 14


 485:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(1);
 486:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(1);
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** 	lcd_write_nibble(0, 0x02); HAL_Delay(1);
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** 	lcd_send_cmd(0x28);
 491:Core/Src/main.c **** 	lcd_send_cmd(0x0C);
 492:Core/Src/main.c **** 	lcd_send_cmd(0x01);
 493:Core/Src/main.c **** 	lcd_send_cmd(0x06);
 494:Core/Src/main.c **** }
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** void lcd_send_string(char *data)
 498:Core/Src/main.c **** {
 499:Core/Src/main.c **** 	while(*data)
 500:Core/Src/main.c **** 	{
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** 		lcd_send_data(*data++);
 503:Core/Src/main.c **** 	}
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** void lcd_gotoxy(uint8_t row, uint8_t col)
 508:Core/Src/main.c **** {
 509:Core/Src/main.c **** 	uint8_t coordinates = 0;
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** 	switch(row)
 512:Core/Src/main.c **** 	{
 513:Core/Src/main.c **** 	case 0:
 514:Core/Src/main.c **** 		coordinates = 0x80 | col;
 515:Core/Src/main.c **** 		break;
 516:Core/Src/main.c **** 	case 1:
 517:Core/Src/main.c **** 		coordinates = 0xC0 | col;
 518:Core/Src/main.c **** 		break;
 519:Core/Src/main.c **** 	}
 520:Core/Src/main.c **** 	lcd_send_cmd(coordinates);
 521:Core/Src/main.c **** }
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** void lcd_clear(void)
 526:Core/Src/main.c **** {
 527:Core/Src/main.c ****     lcd_send_cmd(0x01);  
 528:Core/Src/main.c **** 	HAL_Delay(2);
 529:Core/Src/main.c **** }
 530:Core/Src/main.c **** /* USER CODE END 4 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask1 */
 533:Core/Src/main.c **** /**
 534:Core/Src/main.c ****   * @brief  Function implementing the Task1 thread.
 535:Core/Src/main.c ****   * @param  argument: Not used
 536:Core/Src/main.c ****   * @retval None
 537:Core/Src/main.c ****   */
 538:Core/Src/main.c **** /* USER CODE END Header_StartTask1 */
 539:Core/Src/main.c **** void StartTask1(void const * argument)
 540:Core/Src/main.c **** {
 261              		.loc 1 540 1 is_stmt 1 view -0
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 15


 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 48
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 540 1 is_stmt 0 view .LVU75
 266 0000 70B5     		push	{r4, r5, r6, lr}
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 4, -16
 270              		.cfi_offset 5, -12
 271              		.cfi_offset 6, -8
 272              		.cfi_offset 14, -4
 273 0002 8CB0     		sub	sp, sp, #48
 274              	.LCFI4:
 275              		.cfi_def_cfa_offset 64
 541:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 542:Core/Src/main.c **** 	
 543:Core/Src/main.c **** GPIO_TypeDef* listport[] = {led_1_GPIO_Port, led_2_GPIO_Port, led_3_GPIO_Port, led_4_GPIO_Port,
 276              		.loc 1 543 1 is_stmt 1 view .LVU76
 277              		.loc 1 543 15 is_stmt 0 view .LVU77
 278 0004 1D4E     		ldr	r6, .L13
 279 0006 04AC     		add	r4, sp, #16
 280 0008 3546     		mov	r5, r6
 281 000a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 282              	.LVL9:
 283              		.loc 1 543 15 view .LVU78
 284 000c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 285 000e 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 286 0012 84E80F00 		stm	r4, {r0, r1, r2, r3}
 544:Core/Src/main.c **** 		  led_5_GPIO_Port,led_6_GPIO_Port,led_7_GPIO_Port,led_8_GPIO_Port};
 545:Core/Src/main.c **** 
 546:Core/Src/main.c **** uint16_t listpin[] = {led_1_Pin, led_2_Pin, led_3_Pin, led_4_Pin, led_5_Pin, led_6_Pin,
 287              		.loc 1 546 1 is_stmt 1 view .LVU79
 288              		.loc 1 546 10 is_stmt 0 view .LVU80
 289 0016 6C46     		mov	r4, sp
 290 0018 06F12003 		add	r3, r6, #32
 291 001c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 292 001e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 547:Core/Src/main.c **** 		  led_7_Pin,led_8_Pin};
 548:Core/Src/main.c ****   /* Infinite loop */
 549:Core/Src/main.c ****   for(;;)
 293              		.loc 1 549 3 is_stmt 1 view .LVU81
 550:Core/Src/main.c ****   {
 551:Core/Src/main.c **** 	for(uint8_t count = 0; count < 256; count++)
 294              		.loc 1 551 2 view .LVU82
 295              	.LBB9:
 296              		.loc 1 551 6 view .LVU83
 297              	.LVL10:
 298              		.loc 1 551 14 is_stmt 0 view .LVU84
 299 0022 0025     		movs	r5, #0
 300 0024 28E0     		b	.L10
 301              	.LVL11:
 302              	.L7:
 303              	.LBB10:
 552:Core/Src/main.c **** 	{	
 553:Core/Src/main.c **** 		for(int led = 0 ; led < 8; led++)
 554:Core/Src/main.c **** 		{
 555:Core/Src/main.c **** 			if(count & (1 << led))
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 16


 556:Core/Src/main.c **** 			{
 557:Core/Src/main.c **** 				HAL_GPIO_WritePin(listport[led], listpin[led],0);
 558:Core/Src/main.c **** 			}else
 559:Core/Src/main.c **** 			{
 560:Core/Src/main.c **** 				HAL_GPIO_WritePin(listport[led], listpin[led],1);
 304              		.loc 1 560 5 is_stmt 1 view .LVU85
 305 0026 0122     		movs	r2, #1
 306 0028 0CAB     		add	r3, sp, #48
 307 002a 03EB4403 		add	r3, r3, r4, lsl #1
 308 002e 33F8301C 		ldrh	r1, [r3, #-48]
 309 0032 0CAB     		add	r3, sp, #48
 310 0034 03EB8403 		add	r3, r3, r4, lsl #2
 311 0038 53F8200C 		ldr	r0, [r3, #-32]
 312 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 313              	.LVL12:
 314              	.L8:
 553:Core/Src/main.c **** 		{
 315              		.loc 1 553 33 discriminator 2 view .LVU86
 316 0040 0134     		adds	r4, r4, #1
 317              	.LVL13:
 318              	.L6:
 553:Core/Src/main.c **** 		{
 319              		.loc 1 553 25 discriminator 1 view .LVU87
 320 0042 072C     		cmp	r4, #7
 321 0044 12DC     		bgt	.L12
 555:Core/Src/main.c **** 			{
 322              		.loc 1 555 4 view .LVU88
 555:Core/Src/main.c **** 			{
 323              		.loc 1 555 7 is_stmt 0 view .LVU89
 324 0046 45FA04F3 		asr	r3, r5, r4
 555:Core/Src/main.c **** 			{
 325              		.loc 1 555 6 view .LVU90
 326 004a 13F0010F 		tst	r3, #1
 327 004e EAD0     		beq	.L7
 557:Core/Src/main.c **** 			}else
 328              		.loc 1 557 5 is_stmt 1 view .LVU91
 329 0050 0022     		movs	r2, #0
 330 0052 0CAB     		add	r3, sp, #48
 331 0054 03EB4403 		add	r3, r3, r4, lsl #1
 332 0058 33F8301C 		ldrh	r1, [r3, #-48]
 333 005c 0CAB     		add	r3, sp, #48
 334 005e 03EB8403 		add	r3, r3, r4, lsl #2
 335 0062 53F8200C 		ldr	r0, [r3, #-32]
 336 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL14:
 338 006a E9E7     		b	.L8
 339              	.L12:
 340              	.LBE10:
 561:Core/Src/main.c **** 			}
 562:Core/Src/main.c **** 		}
 563:Core/Src/main.c **** 		osDelay(1000);
 341              		.loc 1 563 3 view .LVU92
 342 006c 4FF47A70 		mov	r0, #1000
 343 0070 FFF7FEFF 		bl	osDelay
 344              	.LVL15:
 551:Core/Src/main.c **** 	{	
 345              		.loc 1 551 43 view .LVU93
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 17


 346 0074 0135     		adds	r5, r5, #1
 347              	.LVL16:
 551:Core/Src/main.c **** 	{	
 348              		.loc 1 551 43 is_stmt 0 view .LVU94
 349 0076 EDB2     		uxtb	r5, r5
 350              	.LVL17:
 551:Core/Src/main.c **** 	{	
 351              		.loc 1 551 2 is_stmt 1 view .LVU95
 352              	.L10:
 553:Core/Src/main.c **** 		{
 353              		.loc 1 553 3 view .LVU96
 354              	.LBB11:
 553:Core/Src/main.c **** 		{
 355              		.loc 1 553 7 view .LVU97
 553:Core/Src/main.c **** 		{
 356              		.loc 1 553 11 is_stmt 0 view .LVU98
 357 0078 0024     		movs	r4, #0
 553:Core/Src/main.c **** 		{
 358              		.loc 1 553 3 view .LVU99
 359 007a E2E7     		b	.L6
 360              	.L14:
 361              		.align	2
 362              	.L13:
 363 007c 00000000 		.word	.LANCHOR0
 364              	.LBE11:
 365              	.LBE9:
 366              		.cfi_endproc
 367              	.LFE266:
 369              		.section	.text.StartTask2,"ax",%progbits
 370              		.align	1
 371              		.global	StartTask2
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	StartTask2:
 377              	.LFB267:
 564:Core/Src/main.c ****  	 }
 565:Core/Src/main.c ****   }
 566:Core/Src/main.c ****   /* USER CODE END 5 */
 567:Core/Src/main.c **** }
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask2 */
 570:Core/Src/main.c **** /**
 571:Core/Src/main.c **** * @brief Function implementing the Task2 thread.
 572:Core/Src/main.c **** * @param argument: Not used
 573:Core/Src/main.c **** * @retval None
 574:Core/Src/main.c **** */
 575:Core/Src/main.c **** /* USER CODE END Header_StartTask2 */
 576:Core/Src/main.c **** void StartTask2(void const * argument)
 577:Core/Src/main.c **** {
 378              		.loc 1 577 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ Volatile: function does not return.
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL18:
 384              		.loc 1 577 1 is_stmt 0 view .LVU101
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 18


 385 0000 08B5     		push	{r3, lr}
 386              	.LCFI5:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 3, -8
 389              		.cfi_offset 14, -4
 390              	.LVL19:
 391              	.L16:
 578:Core/Src/main.c ****   /* USER CODE BEGIN StartTask2 */
 579:Core/Src/main.c ****   /* Infinite loop */
 580:Core/Src/main.c ****   for(;;)
 392              		.loc 1 580 3 is_stmt 1 discriminator 1 view .LVU102
 581:Core/Src/main.c ****   {
 582:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD,GPIO_PIN_14,1);
 393              		.loc 1 582 2 discriminator 1 view .LVU103
 394 0002 0A4C     		ldr	r4, .L18
 395 0004 0122     		movs	r2, #1
 396 0006 4FF48041 		mov	r1, #16384
 397 000a 2046     		mov	r0, r4
 398 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 399              	.LVL20:
 583:Core/Src/main.c **** 	osDelay(123);
 400              		.loc 1 583 2 discriminator 1 view .LVU104
 401 0010 7B20     		movs	r0, #123
 402 0012 FFF7FEFF 		bl	osDelay
 403              	.LVL21:
 584:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD,GPIO_PIN_14,0);
 404              		.loc 1 584 2 discriminator 1 view .LVU105
 405 0016 0022     		movs	r2, #0
 406 0018 4FF48041 		mov	r1, #16384
 407 001c 2046     		mov	r0, r4
 408 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 409              	.LVL22:
 585:Core/Src/main.c **** 	osDelay(456);
 410              		.loc 1 585 2 discriminator 1 view .LVU106
 411 0022 4FF4E470 		mov	r0, #456
 412 0026 FFF7FEFF 		bl	osDelay
 413              	.LVL23:
 580:Core/Src/main.c ****   {
 414              		.loc 1 580 3 discriminator 1 view .LVU107
 415 002a EAE7     		b	.L16
 416              	.L19:
 417              		.align	2
 418              	.L18:
 419 002c 000C0240 		.word	1073875968
 420              		.cfi_endproc
 421              	.LFE267:
 423              		.section	.text.Dec_to_BCD,"ax",%progbits
 424              		.align	1
 425              		.global	Dec_to_BCD
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	Dec_to_BCD:
 431              	.LVL24:
 432              	.LFB253:
 391:Core/Src/main.c ****     return ((dec / 10) << 4) | (dec % 10);
 433              		.loc 1 391 33 view -0
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 19


 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 392:Core/Src/main.c **** }
 438              		.loc 1 392 5 view .LVU109
 392:Core/Src/main.c **** }
 439              		.loc 1 392 18 is_stmt 0 view .LVU110
 440 0000 064B     		ldr	r3, .L21
 441 0002 A3FB0023 		umull	r2, r3, r3, r0
 442 0006 DA08     		lsrs	r2, r3, #3
 443 0008 1346     		mov	r3, r2
 392:Core/Src/main.c **** }
 444              		.loc 1 392 30 view .LVU111
 445 000a 02EB8202 		add	r2, r2, r2, lsl #2
 446 000e A0EB4200 		sub	r0, r0, r2, lsl #1
 447              	.LVL25:
 392:Core/Src/main.c **** }
 448              		.loc 1 392 30 view .LVU112
 449 0012 40EA0310 		orr	r0, r0, r3, lsl #4
 393:Core/Src/main.c **** 
 450              		.loc 1 393 1 view .LVU113
 451 0016 C0B2     		uxtb	r0, r0
 452 0018 7047     		bx	lr
 453              	.L22:
 454 001a 00BF     		.align	2
 455              	.L21:
 456 001c CDCCCCCC 		.word	-858993459
 457              		.cfi_endproc
 458              	.LFE253:
 460              		.section	.text.BCD_to_Dec,"ax",%progbits
 461              		.align	1
 462              		.global	BCD_to_Dec
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 467              	BCD_to_Dec:
 468              	.LVL26:
 469              	.LFB254:
 395:Core/Src/main.c ****     return ((bcd >> 4) * 10) + (bcd & 0x0F);
 470              		.loc 1 395 33 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 396:Core/Src/main.c **** }
 475              		.loc 1 396 5 view .LVU115
 396:Core/Src/main.c **** }
 476              		.loc 1 396 37 is_stmt 0 view .LVU116
 477 0000 00F00F03 		and	r3, r0, #15
 396:Core/Src/main.c **** }
 478              		.loc 1 396 30 view .LVU117
 479 0004 0009     		lsrs	r0, r0, #4
 480              	.LVL27:
 396:Core/Src/main.c **** }
 481              		.loc 1 396 30 view .LVU118
 482 0006 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 20


 483 000a 03EB4000 		add	r0, r3, r0, lsl #1
 397:Core/Src/main.c **** void DS1307_SetTime(uint8_t hours, uint8_t minutes, uint8_t seconds) 
 484              		.loc 1 397 1 view .LVU119
 485 000e C0B2     		uxtb	r0, r0
 486 0010 7047     		bx	lr
 487              		.cfi_endproc
 488              	.LFE254:
 490              		.section	.text.DS1307_SetTime,"ax",%progbits
 491              		.align	1
 492              		.global	DS1307_SetTime
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	DS1307_SetTime:
 498              	.LVL28:
 499              	.LFB255:
 399:Core/Src/main.c ****     uint8_t data[4];
 500              		.loc 1 399 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 8
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 399:Core/Src/main.c ****     uint8_t data[4];
 504              		.loc 1 399 1 is_stmt 0 view .LVU121
 505 0000 30B5     		push	{r4, r5, lr}
 506              	.LCFI6:
 507              		.cfi_def_cfa_offset 12
 508              		.cfi_offset 4, -12
 509              		.cfi_offset 5, -8
 510              		.cfi_offset 14, -4
 511 0002 85B0     		sub	sp, sp, #20
 512              	.LCFI7:
 513              		.cfi_def_cfa_offset 32
 514 0004 0446     		mov	r4, r0
 515 0006 0D46     		mov	r5, r1
 400:Core/Src/main.c **** 
 516              		.loc 1 400 5 is_stmt 1 view .LVU122
 402:Core/Src/main.c ****     data[1] = Dec_to_BCD(seconds);
 517              		.loc 1 402 2 view .LVU123
 402:Core/Src/main.c ****     data[1] = Dec_to_BCD(seconds);
 518              		.loc 1 402 10 is_stmt 0 view .LVU124
 519 0008 0023     		movs	r3, #0
 520 000a 8DF80C30 		strb	r3, [sp, #12]
 403:Core/Src/main.c **** 	data[2] = Dec_to_BCD(minutes);
 521              		.loc 1 403 5 is_stmt 1 view .LVU125
 403:Core/Src/main.c **** 	data[2] = Dec_to_BCD(minutes);
 522              		.loc 1 403 15 is_stmt 0 view .LVU126
 523 000e 1046     		mov	r0, r2
 524              	.LVL29:
 403:Core/Src/main.c **** 	data[2] = Dec_to_BCD(minutes);
 525              		.loc 1 403 15 view .LVU127
 526 0010 FFF7FEFF 		bl	Dec_to_BCD
 527              	.LVL30:
 403:Core/Src/main.c **** 	data[2] = Dec_to_BCD(minutes);
 528              		.loc 1 403 13 view .LVU128
 529 0014 8DF80D00 		strb	r0, [sp, #13]
 404:Core/Src/main.c ****     data[3] = Dec_to_BCD(hours);
 530              		.loc 1 404 2 is_stmt 1 view .LVU129
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 21


 404:Core/Src/main.c ****     data[3] = Dec_to_BCD(hours);
 531              		.loc 1 404 12 is_stmt 0 view .LVU130
 532 0018 2846     		mov	r0, r5
 533 001a FFF7FEFF 		bl	Dec_to_BCD
 534              	.LVL31:
 404:Core/Src/main.c ****     data[3] = Dec_to_BCD(hours);
 535              		.loc 1 404 10 view .LVU131
 536 001e 8DF80E00 		strb	r0, [sp, #14]
 405:Core/Src/main.c ****    
 537              		.loc 1 405 5 is_stmt 1 view .LVU132
 405:Core/Src/main.c ****    
 538              		.loc 1 405 15 is_stmt 0 view .LVU133
 539 0022 2046     		mov	r0, r4
 540 0024 FFF7FEFF 		bl	Dec_to_BCD
 541              	.LVL32:
 405:Core/Src/main.c ****    
 542              		.loc 1 405 13 view .LVU134
 543 0028 8DF80F00 		strb	r0, [sp, #15]
 408:Core/Src/main.c ****     
 544              		.loc 1 408 2 is_stmt 1 view .LVU135
 545 002c 6423     		movs	r3, #100
 546 002e 0093     		str	r3, [sp]
 547 0030 0423     		movs	r3, #4
 548 0032 03AA     		add	r2, sp, #12
 549 0034 D021     		movs	r1, #208
 550 0036 0248     		ldr	r0, .L26
 551 0038 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 552              	.LVL33:
 410:Core/Src/main.c **** 
 553              		.loc 1 410 1 is_stmt 0 view .LVU136
 554 003c 05B0     		add	sp, sp, #20
 555              	.LCFI8:
 556              		.cfi_def_cfa_offset 12
 557              		@ sp needed
 558 003e 30BD     		pop	{r4, r5, pc}
 559              	.L27:
 560              		.align	2
 561              	.L26:
 562 0040 00000000 		.word	.LANCHOR1
 563              		.cfi_endproc
 564              	.LFE255:
 566              		.section	.text.DS1307_SetDate,"ax",%progbits
 567              		.align	1
 568              		.global	DS1307_SetDate
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	DS1307_SetDate:
 574              	.LVL34:
 575              	.LFB256:
 413:Core/Src/main.c ****     uint8_t data[4];
 576              		.loc 1 413 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 413:Core/Src/main.c ****     uint8_t data[4];
 580              		.loc 1 413 1 is_stmt 0 view .LVU138
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 22


 581 0000 70B5     		push	{r4, r5, r6, lr}
 582              	.LCFI9:
 583              		.cfi_def_cfa_offset 16
 584              		.cfi_offset 4, -16
 585              		.cfi_offset 5, -12
 586              		.cfi_offset 6, -8
 587              		.cfi_offset 14, -4
 588 0002 84B0     		sub	sp, sp, #16
 589              	.LCFI10:
 590              		.cfi_def_cfa_offset 32
 591 0004 0D46     		mov	r5, r1
 592 0006 1446     		mov	r4, r2
 414:Core/Src/main.c **** 	
 593              		.loc 1 414 5 is_stmt 1 view .LVU139
 416:Core/Src/main.c ****     data[1] = Dec_to_BCD(day);
 594              		.loc 1 416 2 view .LVU140
 416:Core/Src/main.c ****     data[1] = Dec_to_BCD(day);
 595              		.loc 1 416 10 is_stmt 0 view .LVU141
 596 0008 0426     		movs	r6, #4
 597 000a 8DF80C60 		strb	r6, [sp, #12]
 417:Core/Src/main.c ****     data[2] = Dec_to_BCD(month);  
 598              		.loc 1 417 5 is_stmt 1 view .LVU142
 417:Core/Src/main.c ****     data[2] = Dec_to_BCD(month);  
 599              		.loc 1 417 15 is_stmt 0 view .LVU143
 600 000e FFF7FEFF 		bl	Dec_to_BCD
 601              	.LVL35:
 417:Core/Src/main.c ****     data[2] = Dec_to_BCD(month);  
 602              		.loc 1 417 13 view .LVU144
 603 0012 8DF80D00 		strb	r0, [sp, #13]
 418:Core/Src/main.c **** 	data[3] = Dec_to_BCD(year);      
 604              		.loc 1 418 5 is_stmt 1 view .LVU145
 418:Core/Src/main.c **** 	data[3] = Dec_to_BCD(year);      
 605              		.loc 1 418 15 is_stmt 0 view .LVU146
 606 0016 2846     		mov	r0, r5
 607 0018 FFF7FEFF 		bl	Dec_to_BCD
 608              	.LVL36:
 418:Core/Src/main.c **** 	data[3] = Dec_to_BCD(year);      
 609              		.loc 1 418 13 view .LVU147
 610 001c 8DF80E00 		strb	r0, [sp, #14]
 419:Core/Src/main.c **** 
 611              		.loc 1 419 2 is_stmt 1 view .LVU148
 419:Core/Src/main.c **** 
 612              		.loc 1 419 12 is_stmt 0 view .LVU149
 613 0020 E0B2     		uxtb	r0, r4
 614 0022 FFF7FEFF 		bl	Dec_to_BCD
 615              	.LVL37:
 419:Core/Src/main.c **** 
 616              		.loc 1 419 10 view .LVU150
 617 0026 8DF80F00 		strb	r0, [sp, #15]
 421:Core/Src/main.c **** }
 618              		.loc 1 421 2 is_stmt 1 view .LVU151
 619 002a 6423     		movs	r3, #100
 620 002c 0093     		str	r3, [sp]
 621 002e 3346     		mov	r3, r6
 622 0030 03AA     		add	r2, sp, #12
 623 0032 D021     		movs	r1, #208
 624 0034 0248     		ldr	r0, .L30
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 23


 625 0036 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 626              	.LVL38:
 422:Core/Src/main.c **** 
 627              		.loc 1 422 1 is_stmt 0 view .LVU152
 628 003a 04B0     		add	sp, sp, #16
 629              	.LCFI11:
 630              		.cfi_def_cfa_offset 16
 631              		@ sp needed
 632 003c 70BD     		pop	{r4, r5, r6, pc}
 633              	.L31:
 634 003e 00BF     		.align	2
 635              	.L30:
 636 0040 00000000 		.word	.LANCHOR1
 637              		.cfi_endproc
 638              	.LFE256:
 640              		.section	.text.DS1307_GetTime,"ax",%progbits
 641              		.align	1
 642              		.global	DS1307_GetTime
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	DS1307_GetTime:
 648              	.LVL39:
 649              	.LFB257:
 425:Core/Src/main.c ****     uint8_t data[3];
 650              		.loc 1 425 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 8
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 425:Core/Src/main.c ****     uint8_t data[3];
 654              		.loc 1 425 1 is_stmt 0 view .LVU154
 655 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 656              	.LCFI12:
 657              		.cfi_def_cfa_offset 20
 658              		.cfi_offset 4, -20
 659              		.cfi_offset 5, -16
 660              		.cfi_offset 6, -12
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 85B0     		sub	sp, sp, #20
 664              	.LCFI13:
 665              		.cfi_def_cfa_offset 40
 666 0004 0446     		mov	r4, r0
 667 0006 0D46     		mov	r5, r1
 668 0008 1646     		mov	r6, r2
 426:Core/Src/main.c **** 	uint8_t reg = 0x00;
 669              		.loc 1 426 5 is_stmt 1 view .LVU155
 427:Core/Src/main.c **** 
 670              		.loc 1 427 2 view .LVU156
 427:Core/Src/main.c **** 
 671              		.loc 1 427 10 is_stmt 0 view .LVU157
 672 000a 0023     		movs	r3, #0
 673 000c 8DF80B30 		strb	r3, [sp, #11]
 429:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 50);     
 674              		.loc 1 429 2 is_stmt 1 view .LVU158
 675 0010 114F     		ldr	r7, .L34
 676 0012 0A23     		movs	r3, #10
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 24


 677 0014 0093     		str	r3, [sp]
 678 0016 0123     		movs	r3, #1
 679 0018 0DF10B02 		add	r2, sp, #11
 680              	.LVL40:
 429:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 50);     
 681              		.loc 1 429 2 is_stmt 0 view .LVU159
 682 001c D021     		movs	r1, #208
 683              	.LVL41:
 429:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 50);     
 684              		.loc 1 429 2 view .LVU160
 685 001e 3846     		mov	r0, r7
 686              	.LVL42:
 429:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 50);     
 687              		.loc 1 429 2 view .LVU161
 688 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 689              	.LVL43:
 430:Core/Src/main.c ****     *seconds = BCD_to_Dec(data[0]);
 690              		.loc 1 430 2 is_stmt 1 view .LVU162
 691 0024 3223     		movs	r3, #50
 692 0026 0093     		str	r3, [sp]
 693 0028 0323     		movs	r3, #3
 694 002a 03AA     		add	r2, sp, #12
 695 002c D121     		movs	r1, #209
 696 002e 3846     		mov	r0, r7
 697 0030 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 698              	.LVL44:
 431:Core/Src/main.c **** 	*minutes = BCD_to_Dec(data[1]);
 699              		.loc 1 431 5 view .LVU163
 431:Core/Src/main.c **** 	*minutes = BCD_to_Dec(data[1]);
 700              		.loc 1 431 16 is_stmt 0 view .LVU164
 701 0034 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2
 702 0038 FFF7FEFF 		bl	BCD_to_Dec
 703              	.LVL45:
 431:Core/Src/main.c **** 	*minutes = BCD_to_Dec(data[1]);
 704              		.loc 1 431 14 view .LVU165
 705 003c 3070     		strb	r0, [r6]
 432:Core/Src/main.c ****     *hours   = BCD_to_Dec(data[2]);
 706              		.loc 1 432 2 is_stmt 1 view .LVU166
 432:Core/Src/main.c ****     *hours   = BCD_to_Dec(data[2]);
 707              		.loc 1 432 13 is_stmt 0 view .LVU167
 708 003e 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2
 709 0042 FFF7FEFF 		bl	BCD_to_Dec
 710              	.LVL46:
 432:Core/Src/main.c ****     *hours   = BCD_to_Dec(data[2]);
 711              		.loc 1 432 11 view .LVU168
 712 0046 2870     		strb	r0, [r5]
 433:Core/Src/main.c **** }
 713              		.loc 1 433 5 is_stmt 1 view .LVU169
 433:Core/Src/main.c **** }
 714              		.loc 1 433 16 is_stmt 0 view .LVU170
 715 0048 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 716 004c FFF7FEFF 		bl	BCD_to_Dec
 717              	.LVL47:
 433:Core/Src/main.c **** }
 718              		.loc 1 433 14 view .LVU171
 719 0050 2070     		strb	r0, [r4]
 434:Core/Src/main.c **** 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 25


 720              		.loc 1 434 1 view .LVU172
 721 0052 05B0     		add	sp, sp, #20
 722              	.LCFI14:
 723              		.cfi_def_cfa_offset 20
 724              		@ sp needed
 725 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 726              	.LVL48:
 727              	.L35:
 434:Core/Src/main.c **** 
 728              		.loc 1 434 1 view .LVU173
 729 0056 00BF     		.align	2
 730              	.L34:
 731 0058 00000000 		.word	.LANCHOR1
 732              		.cfi_endproc
 733              	.LFE257:
 735              		.section	.text.DS1307_GetDate,"ax",%progbits
 736              		.align	1
 737              		.global	DS1307_GetDate
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 742              	DS1307_GetDate:
 743              	.LVL49:
 744              	.LFB258:
 437:Core/Src/main.c ****     uint8_t data[3];
 745              		.loc 1 437 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 8
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 437:Core/Src/main.c ****     uint8_t data[3];
 749              		.loc 1 437 1 is_stmt 0 view .LVU175
 750 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 751              	.LCFI15:
 752              		.cfi_def_cfa_offset 24
 753              		.cfi_offset 4, -24
 754              		.cfi_offset 5, -20
 755              		.cfi_offset 6, -16
 756              		.cfi_offset 7, -12
 757              		.cfi_offset 8, -8
 758              		.cfi_offset 14, -4
 759 0004 84B0     		sub	sp, sp, #16
 760              	.LCFI16:
 761              		.cfi_def_cfa_offset 40
 762 0006 0646     		mov	r6, r0
 763 0008 0D46     		mov	r5, r1
 764 000a 1446     		mov	r4, r2
 438:Core/Src/main.c **** 	uint8_t reg = 0x04;
 765              		.loc 1 438 5 is_stmt 1 view .LVU176
 439:Core/Src/main.c **** 
 766              		.loc 1 439 2 view .LVU177
 439:Core/Src/main.c **** 
 767              		.loc 1 439 10 is_stmt 0 view .LVU178
 768 000c 0423     		movs	r3, #4
 769 000e 8DF80B30 		strb	r3, [sp, #11]
 441:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 100);   
 770              		.loc 1 441 2 is_stmt 1 view .LVU179
 771 0012 144F     		ldr	r7, .L38
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 26


 772 0014 4FF06408 		mov	r8, #100
 773 0018 CDF80080 		str	r8, [sp]
 774 001c 0123     		movs	r3, #1
 775 001e 0DF10B02 		add	r2, sp, #11
 776              	.LVL50:
 441:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 100);   
 777              		.loc 1 441 2 is_stmt 0 view .LVU180
 778 0022 D021     		movs	r1, #208
 779              	.LVL51:
 441:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 100);   
 780              		.loc 1 441 2 view .LVU181
 781 0024 3846     		mov	r0, r7
 782              	.LVL52:
 441:Core/Src/main.c **** 	HAL_I2C_Master_Receive(&hi2c1, DS1307_ADDRESS_READ, &data[0], 3, 100);   
 783              		.loc 1 441 2 view .LVU182
 784 0026 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 785              	.LVL53:
 442:Core/Src/main.c ****     *day    = BCD_to_Dec(data[0]);
 786              		.loc 1 442 2 is_stmt 1 view .LVU183
 787 002a CDF80080 		str	r8, [sp]
 788 002e 0323     		movs	r3, #3
 789 0030 03AA     		add	r2, sp, #12
 790 0032 D121     		movs	r1, #209
 791 0034 3846     		mov	r0, r7
 792 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 793              	.LVL54:
 443:Core/Src/main.c ****     *month  = BCD_to_Dec(data[1]);
 794              		.loc 1 443 5 view .LVU184
 443:Core/Src/main.c ****     *month  = BCD_to_Dec(data[1]);
 795              		.loc 1 443 15 is_stmt 0 view .LVU185
 796 003a 9DF80C00 		ldrb	r0, [sp, #12]	@ zero_extendqisi2
 797 003e FFF7FEFF 		bl	BCD_to_Dec
 798              	.LVL55:
 443:Core/Src/main.c ****     *month  = BCD_to_Dec(data[1]);
 799              		.loc 1 443 13 view .LVU186
 800 0042 3070     		strb	r0, [r6]
 444:Core/Src/main.c ****     *year   = 2000 + BCD_to_Dec(data[2]);
 801              		.loc 1 444 5 is_stmt 1 view .LVU187
 444:Core/Src/main.c ****     *year   = 2000 + BCD_to_Dec(data[2]);
 802              		.loc 1 444 15 is_stmt 0 view .LVU188
 803 0044 9DF80D00 		ldrb	r0, [sp, #13]	@ zero_extendqisi2
 804 0048 FFF7FEFF 		bl	BCD_to_Dec
 805              	.LVL56:
 444:Core/Src/main.c ****     *year   = 2000 + BCD_to_Dec(data[2]);
 806              		.loc 1 444 13 view .LVU189
 807 004c 2870     		strb	r0, [r5]
 445:Core/Src/main.c **** }
 808              		.loc 1 445 5 is_stmt 1 view .LVU190
 445:Core/Src/main.c **** }
 809              		.loc 1 445 22 is_stmt 0 view .LVU191
 810 004e 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 811 0052 FFF7FEFF 		bl	BCD_to_Dec
 812              	.LVL57:
 813 0056 80B2     		uxth	r0, r0
 445:Core/Src/main.c **** }
 814              		.loc 1 445 20 view .LVU192
 815 0058 00F5FA60 		add	r0, r0, #2000
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 27


 445:Core/Src/main.c **** }
 816              		.loc 1 445 13 view .LVU193
 817 005c 2080     		strh	r0, [r4]	@ movhi
 446:Core/Src/main.c **** 
 818              		.loc 1 446 1 view .LVU194
 819 005e 04B0     		add	sp, sp, #16
 820              	.LCFI17:
 821              		.cfi_def_cfa_offset 24
 822              		@ sp needed
 823 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 824              	.LVL58:
 825              	.L39:
 446:Core/Src/main.c **** 
 826              		.loc 1 446 1 view .LVU195
 827              		.align	2
 828              	.L38:
 829 0064 00000000 		.word	.LANCHOR1
 830              		.cfi_endproc
 831              	.LFE258:
 833              		.section	.text.lcd_write_nibble,"ax",%progbits
 834              		.align	1
 835              		.global	lcd_write_nibble
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 840              	lcd_write_nibble:
 841              	.LVL59:
 842              	.LFB259:
 449:Core/Src/main.c **** 	uint8_t dat_lcd;
 843              		.loc 1 449 1 is_stmt 1 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 8
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 449:Core/Src/main.c **** 	uint8_t dat_lcd;
 847              		.loc 1 449 1 is_stmt 0 view .LVU197
 848 0000 70B5     		push	{r4, r5, r6, lr}
 849              	.LCFI18:
 850              		.cfi_def_cfa_offset 16
 851              		.cfi_offset 4, -16
 852              		.cfi_offset 5, -12
 853              		.cfi_offset 6, -8
 854              		.cfi_offset 14, -4
 855 0002 84B0     		sub	sp, sp, #16
 856              	.LCFI19:
 857              		.cfi_def_cfa_offset 32
 450:Core/Src/main.c **** 
 858              		.loc 1 450 2 is_stmt 1 view .LVU198
 452:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 859              		.loc 1 452 2 view .LVU199
 452:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 860              		.loc 1 452 40 is_stmt 0 view .LVU200
 861 0004 40EA0110 		orr	r0, r0, r1, lsl #4
 862              	.LVL60:
 452:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 863              		.loc 1 452 40 view .LVU201
 864 0008 C4B2     		uxtb	r4, r0
 865 000a 44F00C03 		orr	r3, r4, #12
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 28


 452:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 866              		.loc 1 452 10 view .LVU202
 867 000e 8DF80F30 		strb	r3, [sp, #15]
 453:Core/Src/main.c **** 
 868              		.loc 1 453 2 is_stmt 1 view .LVU203
 869 0012 0C4D     		ldr	r5, .L42
 870 0014 1426     		movs	r6, #20
 871 0016 0096     		str	r6, [sp]
 872 0018 0123     		movs	r3, #1
 873 001a 0DF10F02 		add	r2, sp, #15
 874 001e 4E21     		movs	r1, #78
 875              	.LVL61:
 453:Core/Src/main.c **** 
 876              		.loc 1 453 2 is_stmt 0 view .LVU204
 877 0020 2846     		mov	r0, r5
 878 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 879              	.LVL62:
 455:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 880              		.loc 1 455 2 is_stmt 1 view .LVU205
 455:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 881              		.loc 1 455 40 is_stmt 0 view .LVU206
 882 0026 44F00804 		orr	r4, r4, #8
 455:Core/Src/main.c **** 	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDRESS, &dat_lcd, 1, 20);
 883              		.loc 1 455 10 view .LVU207
 884 002a 8DF80F40 		strb	r4, [sp, #15]
 456:Core/Src/main.c **** 
 885              		.loc 1 456 2 is_stmt 1 view .LVU208
 886 002e 0096     		str	r6, [sp]
 887 0030 0123     		movs	r3, #1
 888 0032 0DF10F02 		add	r2, sp, #15
 889 0036 4E21     		movs	r1, #78
 890 0038 2846     		mov	r0, r5
 891 003a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 892              	.LVL63:
 459:Core/Src/main.c **** 
 893              		.loc 1 459 1 is_stmt 0 view .LVU209
 894 003e 04B0     		add	sp, sp, #16
 895              	.LCFI20:
 896              		.cfi_def_cfa_offset 16
 897              		@ sp needed
 898 0040 70BD     		pop	{r4, r5, r6, pc}
 899              	.L43:
 900 0042 00BF     		.align	2
 901              	.L42:
 902 0044 00000000 		.word	.LANCHOR1
 903              		.cfi_endproc
 904              	.LFE259:
 906              		.section	.text.lcd_send_cmd,"ax",%progbits
 907              		.align	1
 908              		.global	lcd_send_cmd
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 913              	lcd_send_cmd:
 914              	.LVL64:
 915              	.LFB260:
 463:Core/Src/main.c **** 	lcd_write_nibble(0, (cmd>>4)&0x0F);
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 29


 916              		.loc 1 463 1 is_stmt 1 view -0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 463:Core/Src/main.c **** 	lcd_write_nibble(0, (cmd>>4)&0x0F);
 920              		.loc 1 463 1 is_stmt 0 view .LVU211
 921 0000 10B5     		push	{r4, lr}
 922              	.LCFI21:
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 4, -8
 925              		.cfi_offset 14, -4
 926 0002 0446     		mov	r4, r0
 464:Core/Src/main.c **** 	lcd_write_nibble(0, cmd&0x0F);
 927              		.loc 1 464 2 is_stmt 1 view .LVU212
 928 0004 0109     		lsrs	r1, r0, #4
 929 0006 0020     		movs	r0, #0
 930              	.LVL65:
 464:Core/Src/main.c **** 	lcd_write_nibble(0, cmd&0x0F);
 931              		.loc 1 464 2 is_stmt 0 view .LVU213
 932 0008 FFF7FEFF 		bl	lcd_write_nibble
 933              	.LVL66:
 465:Core/Src/main.c **** 
 934              		.loc 1 465 2 is_stmt 1 view .LVU214
 935 000c 04F00F01 		and	r1, r4, #15
 936 0010 0020     		movs	r0, #0
 937 0012 FFF7FEFF 		bl	lcd_write_nibble
 938              	.LVL67:
 467:Core/Src/main.c **** }
 939              		.loc 1 467 2 view .LVU215
 940 0016 0220     		movs	r0, #2
 941 0018 FFF7FEFF 		bl	HAL_Delay
 942              	.LVL68:
 468:Core/Src/main.c **** 
 943              		.loc 1 468 1 is_stmt 0 view .LVU216
 944 001c 10BD     		pop	{r4, pc}
 945              		.cfi_endproc
 946              	.LFE260:
 948              		.section	.text.lcd_send_data,"ax",%progbits
 949              		.align	1
 950              		.global	lcd_send_data
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 955              	lcd_send_data:
 956              	.LVL69:
 957              	.LFB261:
 472:Core/Src/main.c **** 	lcd_write_nibble(1, (data>>4)&0x0F);
 958              		.loc 1 472 1 is_stmt 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 472:Core/Src/main.c **** 	lcd_write_nibble(1, (data>>4)&0x0F);
 962              		.loc 1 472 1 is_stmt 0 view .LVU218
 963 0000 10B5     		push	{r4, lr}
 964              	.LCFI22:
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 4, -8
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 30


 967              		.cfi_offset 14, -4
 968 0002 0446     		mov	r4, r0
 473:Core/Src/main.c **** 	lcd_write_nibble(1, data & 0x0F);
 969              		.loc 1 473 2 is_stmt 1 view .LVU219
 970 0004 0109     		lsrs	r1, r0, #4
 971 0006 0120     		movs	r0, #1
 972              	.LVL70:
 473:Core/Src/main.c **** 	lcd_write_nibble(1, data & 0x0F);
 973              		.loc 1 473 2 is_stmt 0 view .LVU220
 974 0008 FFF7FEFF 		bl	lcd_write_nibble
 975              	.LVL71:
 474:Core/Src/main.c **** 
 976              		.loc 1 474 2 is_stmt 1 view .LVU221
 977 000c 04F00F01 		and	r1, r4, #15
 978 0010 0120     		movs	r0, #1
 979 0012 FFF7FEFF 		bl	lcd_write_nibble
 980              	.LVL72:
 476:Core/Src/main.c **** }
 981              		.loc 1 476 2 view .LVU222
 982 0016 0220     		movs	r0, #2
 983 0018 FFF7FEFF 		bl	HAL_Delay
 984              	.LVL73:
 477:Core/Src/main.c **** 
 985              		.loc 1 477 1 is_stmt 0 view .LVU223
 986 001c 10BD     		pop	{r4, pc}
 987              		.cfi_endproc
 988              	.LFE261:
 990              		.section	.text.lcd_init,"ax",%progbits
 991              		.align	1
 992              		.global	lcd_init
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 997              	lcd_init:
 998              	.LFB262:
 481:Core/Src/main.c **** 	HAL_Delay(20);
 999              		.loc 1 481 1 is_stmt 1 view -0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003 0000 08B5     		push	{r3, lr}
 1004              	.LCFI23:
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 3, -8
 1007              		.cfi_offset 14, -4
 482:Core/Src/main.c **** 
 1008              		.loc 1 482 2 view .LVU225
 1009 0002 1420     		movs	r0, #20
 1010 0004 FFF7FEFF 		bl	HAL_Delay
 1011              	.LVL74:
 484:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(1);
 1012              		.loc 1 484 2 view .LVU226
 1013 0008 0321     		movs	r1, #3
 1014 000a 0020     		movs	r0, #0
 1015 000c FFF7FEFF 		bl	lcd_write_nibble
 1016              	.LVL75:
 484:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(1);
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 31


 1017              		.loc 1 484 29 view .LVU227
 1018 0010 0520     		movs	r0, #5
 1019 0012 FFF7FEFF 		bl	HAL_Delay
 1020              	.LVL76:
 485:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(1);
 1021              		.loc 1 485 2 view .LVU228
 1022 0016 0321     		movs	r1, #3
 1023 0018 0020     		movs	r0, #0
 1024 001a FFF7FEFF 		bl	lcd_write_nibble
 1025              	.LVL77:
 485:Core/Src/main.c **** 	lcd_write_nibble(0, 0x03); HAL_Delay(1);
 1026              		.loc 1 485 29 view .LVU229
 1027 001e 0120     		movs	r0, #1
 1028 0020 FFF7FEFF 		bl	HAL_Delay
 1029              	.LVL78:
 486:Core/Src/main.c **** 
 1030              		.loc 1 486 2 view .LVU230
 1031 0024 0321     		movs	r1, #3
 1032 0026 0020     		movs	r0, #0
 1033 0028 FFF7FEFF 		bl	lcd_write_nibble
 1034              	.LVL79:
 486:Core/Src/main.c **** 
 1035              		.loc 1 486 29 view .LVU231
 1036 002c 0120     		movs	r0, #1
 1037 002e FFF7FEFF 		bl	HAL_Delay
 1038              	.LVL80:
 488:Core/Src/main.c **** 
 1039              		.loc 1 488 2 view .LVU232
 1040 0032 0221     		movs	r1, #2
 1041 0034 0020     		movs	r0, #0
 1042 0036 FFF7FEFF 		bl	lcd_write_nibble
 1043              	.LVL81:
 488:Core/Src/main.c **** 
 1044              		.loc 1 488 29 view .LVU233
 1045 003a 0120     		movs	r0, #1
 1046 003c FFF7FEFF 		bl	HAL_Delay
 1047              	.LVL82:
 490:Core/Src/main.c **** 	lcd_send_cmd(0x0C);
 1048              		.loc 1 490 2 view .LVU234
 1049 0040 2820     		movs	r0, #40
 1050 0042 FFF7FEFF 		bl	lcd_send_cmd
 1051              	.LVL83:
 491:Core/Src/main.c **** 	lcd_send_cmd(0x01);
 1052              		.loc 1 491 2 view .LVU235
 1053 0046 0C20     		movs	r0, #12
 1054 0048 FFF7FEFF 		bl	lcd_send_cmd
 1055              	.LVL84:
 492:Core/Src/main.c **** 	lcd_send_cmd(0x06);
 1056              		.loc 1 492 2 view .LVU236
 1057 004c 0120     		movs	r0, #1
 1058 004e FFF7FEFF 		bl	lcd_send_cmd
 1059              	.LVL85:
 493:Core/Src/main.c **** }
 1060              		.loc 1 493 2 view .LVU237
 1061 0052 0620     		movs	r0, #6
 1062 0054 FFF7FEFF 		bl	lcd_send_cmd
 1063              	.LVL86:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 32


 494:Core/Src/main.c **** 
 1064              		.loc 1 494 1 is_stmt 0 view .LVU238
 1065 0058 08BD     		pop	{r3, pc}
 1066              		.cfi_endproc
 1067              	.LFE262:
 1069              		.section	.text.lcd_send_string,"ax",%progbits
 1070              		.align	1
 1071              		.global	lcd_send_string
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	lcd_send_string:
 1077              	.LVL87:
 1078              	.LFB263:
 498:Core/Src/main.c **** 	while(*data)
 1079              		.loc 1 498 1 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 498:Core/Src/main.c **** 	while(*data)
 1083              		.loc 1 498 1 is_stmt 0 view .LVU240
 1084 0000 10B5     		push	{r4, lr}
 1085              	.LCFI24:
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 4, -8
 1088              		.cfi_offset 14, -4
 1089 0002 0446     		mov	r4, r0
 499:Core/Src/main.c **** 	{
 1090              		.loc 1 499 2 is_stmt 1 view .LVU241
 499:Core/Src/main.c **** 	{
 1091              		.loc 1 499 7 is_stmt 0 view .LVU242
 1092 0004 02E0     		b	.L51
 1093              	.LVL88:
 1094              	.L52:
 502:Core/Src/main.c **** 	}
 1095              		.loc 1 502 3 is_stmt 1 view .LVU243
 502:Core/Src/main.c **** 	}
 1096              		.loc 1 502 22 is_stmt 0 view .LVU244
 1097 0006 0134     		adds	r4, r4, #1
 1098              	.LVL89:
 502:Core/Src/main.c **** 	}
 1099              		.loc 1 502 3 view .LVU245
 1100 0008 FFF7FEFF 		bl	lcd_send_data
 1101              	.LVL90:
 1102              	.L51:
 499:Core/Src/main.c **** 	{
 1103              		.loc 1 499 8 is_stmt 1 view .LVU246
 1104 000c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1105 000e 0028     		cmp	r0, #0
 1106 0010 F9D1     		bne	.L52
 504:Core/Src/main.c **** 
 1107              		.loc 1 504 1 is_stmt 0 view .LVU247
 1108 0012 10BD     		pop	{r4, pc}
 504:Core/Src/main.c **** 
 1109              		.loc 1 504 1 view .LVU248
 1110              		.cfi_endproc
 1111              	.LFE263:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 33


 1113              		.section	.text.lcd_gotoxy,"ax",%progbits
 1114              		.align	1
 1115              		.global	lcd_gotoxy
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1120              	lcd_gotoxy:
 1121              	.LVL91:
 1122              	.LFB264:
 508:Core/Src/main.c **** 	uint8_t coordinates = 0;
 1123              		.loc 1 508 1 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 508:Core/Src/main.c **** 	uint8_t coordinates = 0;
 1127              		.loc 1 508 1 is_stmt 0 view .LVU250
 1128 0000 08B5     		push	{r3, lr}
 1129              	.LCFI25:
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 3, -8
 1132              		.cfi_offset 14, -4
 509:Core/Src/main.c **** 
 1133              		.loc 1 509 2 is_stmt 1 view .LVU251
 1134              	.LVL92:
 511:Core/Src/main.c **** 	{
 1135              		.loc 1 511 2 view .LVU252
 1136 0002 28B1     		cbz	r0, .L55
 1137 0004 0128     		cmp	r0, #1
 1138 0006 06D0     		beq	.L56
 1139 0008 0020     		movs	r0, #0
 1140              	.LVL93:
 1141              	.L57:
 520:Core/Src/main.c **** }
 1142              		.loc 1 520 2 view .LVU253
 1143 000a FFF7FEFF 		bl	lcd_send_cmd
 1144              	.LVL94:
 521:Core/Src/main.c **** 
 1145              		.loc 1 521 1 is_stmt 0 view .LVU254
 1146 000e 08BD     		pop	{r3, pc}
 1147              	.LVL95:
 1148              	.L55:
 514:Core/Src/main.c **** 		break;
 1149              		.loc 1 514 3 is_stmt 1 view .LVU255
 514:Core/Src/main.c **** 		break;
 1150              		.loc 1 514 15 is_stmt 0 view .LVU256
 1151 0010 41F08000 		orr	r0, r1, #128
 1152              	.LVL96:
 515:Core/Src/main.c **** 	case 1:
 1153              		.loc 1 515 3 is_stmt 1 view .LVU257
 1154 0014 F9E7     		b	.L57
 1155              	.LVL97:
 1156              	.L56:
 517:Core/Src/main.c **** 		break;
 1157              		.loc 1 517 3 view .LVU258
 517:Core/Src/main.c **** 		break;
 1158              		.loc 1 517 15 is_stmt 0 view .LVU259
 1159 0016 41F0C000 		orr	r0, r1, #192
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 34


 1160              	.LVL98:
 518:Core/Src/main.c **** 	}
 1161              		.loc 1 518 3 is_stmt 1 view .LVU260
 1162 001a F6E7     		b	.L57
 1163              		.cfi_endproc
 1164              	.LFE264:
 1166              		.section	.text.lcd_clear,"ax",%progbits
 1167              		.align	1
 1168              		.global	lcd_clear
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1173              	lcd_clear:
 1174              	.LFB265:
 526:Core/Src/main.c ****     lcd_send_cmd(0x01);  
 1175              		.loc 1 526 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179 0000 08B5     		push	{r3, lr}
 1180              	.LCFI26:
 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 3, -8
 1183              		.cfi_offset 14, -4
 527:Core/Src/main.c **** 	HAL_Delay(2);
 1184              		.loc 1 527 5 view .LVU262
 1185 0002 0120     		movs	r0, #1
 1186 0004 FFF7FEFF 		bl	lcd_send_cmd
 1187              	.LVL99:
 528:Core/Src/main.c **** }
 1188              		.loc 1 528 2 view .LVU263
 1189 0008 0220     		movs	r0, #2
 1190 000a FFF7FEFF 		bl	HAL_Delay
 1191              	.LVL100:
 529:Core/Src/main.c **** /* USER CODE END 4 */
 1192              		.loc 1 529 1 is_stmt 0 view .LVU264
 1193 000e 08BD     		pop	{r3, pc}
 1194              		.cfi_endproc
 1195              	.LFE265:
 1197              		.section	.rodata.StartTask3.str1.4,"aMS",%progbits,1
 1198              		.align	2
 1199              	.LC10:
 1200 0000 25303264 		.ascii	"%02d:%02d:%02d-%02d/%02d\000"
 1200      3A253032 
 1200      643A2530 
 1200      32642D25 
 1200      3032642F 
 1201 0019 000000   		.align	2
 1202              	.LC8:
 1203 001c 140200   		.ascii	"\024\002\000"
 1204 001f 00       		.align	2
 1205              	.LC9:
 1206 0020 1E0A1800 		.ascii	"\036\012\030\000"
 1207              		.section	.text.StartTask3,"ax",%progbits
 1208              		.align	1
 1209              		.global	StartTask3
 1210              		.syntax unified
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 35


 1211              		.thumb
 1212              		.thumb_func
 1214              	StartTask3:
 1215              	.LVL101:
 1216              	.LFB268:
 586:Core/Src/main.c ****   }
 587:Core/Src/main.c ****   /* USER CODE END StartTask2 */
 588:Core/Src/main.c **** }
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask3 */
 591:Core/Src/main.c **** /**
 592:Core/Src/main.c **** * @brief Function implementing the Task3 thread.
 593:Core/Src/main.c **** * @param argument: Not used
 594:Core/Src/main.c **** * @retval None
 595:Core/Src/main.c **** */
 596:Core/Src/main.c **** /* USER CODE END Header_StartTask3 */
 597:Core/Src/main.c **** void StartTask3(void const * argument)
 598:Core/Src/main.c **** {
 1217              		.loc 1 598 1 is_stmt 1 view -0
 1218              		.cfi_startproc
 1219              		@ Volatile: function does not return.
 1220              		@ args = 0, pretend = 0, frame = 120
 1221              		@ frame_needed = 0, uses_anonymous_args = 0
 1222              		.loc 1 598 1 is_stmt 0 view .LVU266
 1223 0000 00B5     		push	{lr}
 1224              	.LCFI27:
 1225              		.cfi_def_cfa_offset 4
 1226              		.cfi_offset 14, -4
 1227 0002 A3B0     		sub	sp, sp, #140
 1228              	.LCFI28:
 1229              		.cfi_def_cfa_offset 144
 599:Core/Src/main.c ****   /* USER CODE BEGIN StartTask3 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c **** 	uint8_t seconds;
 1230              		.loc 1 601 2 is_stmt 1 view .LVU267
 602:Core/Src/main.c **** 	uint8_t minutes;
 1231              		.loc 1 602 2 view .LVU268
 603:Core/Src/main.c **** 	uint8_t hours;
 1232              		.loc 1 603 2 view .LVU269
 604:Core/Src/main.c **** 	uint8_t day;
 1233              		.loc 1 604 2 view .LVU270
 605:Core/Src/main.c **** 	uint8_t month;
 1234              		.loc 1 605 2 view .LVU271
 606:Core/Src/main.c **** 	uint16_t year;
 1235              		.loc 1 606 2 view .LVU272
 607:Core/Src/main.c **** 
 608:Core/Src/main.c **** 	char data_to_display_lcd[100];
 1236              		.loc 1 608 2 view .LVU273
 609:Core/Src/main.c **** 	lcd_init();
 1237              		.loc 1 609 2 view .LVU274
 1238 0004 FFF7FEFF 		bl	lcd_init
 1239              	.LVL102:
 610:Core/Src/main.c **** 	lcd_clear();
 1240              		.loc 1 610 2 view .LVU275
 1241 0008 FFF7FEFF 		bl	lcd_clear
 1242              	.LVL103:
 611:Core/Src/main.c **** 	uint8_t time[3] = {20,2,0};
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 36


 1243              		.loc 1 611 2 view .LVU276
 1244              		.loc 1 611 10 is_stmt 0 view .LVU277
 1245 000c 214B     		ldr	r3, .L64
 1246 000e 1B68     		ldr	r3, [r3]
 1247 0010 ADF81830 		strh	r3, [sp, #24]	@ movhi
 1248 0014 1B0C     		lsrs	r3, r3, #16
 1249 0016 8DF81A30 		strb	r3, [sp, #26]
 612:Core/Src/main.c **** 	uint8_t date[3] = {30,10,24};
 1250              		.loc 1 612 2 is_stmt 1 view .LVU278
 1251              		.loc 1 612 10 is_stmt 0 view .LVU279
 1252 001a 1F4B     		ldr	r3, .L64+4
 1253 001c 1B68     		ldr	r3, [r3]
 1254 001e ADF81430 		strh	r3, [sp, #20]	@ movhi
 1255 0022 1B0C     		lsrs	r3, r3, #16
 1256 0024 8DF81630 		strb	r3, [sp, #22]
 613:Core/Src/main.c **** 	
 614:Core/Src/main.c **** 	DS1307_SetTime(time[0],time[1],time[2]);
 1257              		.loc 1 614 2 is_stmt 1 view .LVU280
 1258 0028 0022     		movs	r2, #0
 1259 002a 0221     		movs	r1, #2
 1260 002c 1420     		movs	r0, #20
 1261 002e FFF7FEFF 		bl	DS1307_SetTime
 1262              	.LVL104:
 615:Core/Src/main.c **** 	DS1307_SetDate(date[0],date[1],date[2]);
 1263              		.loc 1 615 2 view .LVU281
 1264 0032 1822     		movs	r2, #24
 1265 0034 0A21     		movs	r1, #10
 1266 0036 1E20     		movs	r0, #30
 1267 0038 FFF7FEFF 		bl	DS1307_SetDate
 1268              	.LVL105:
 1269              	.L62:
 616:Core/Src/main.c ****   /* Infinite loop */
 617:Core/Src/main.c ****   for(;;)
 1270              		.loc 1 617 3 discriminator 1 view .LVU282
 618:Core/Src/main.c ****   {
 619:Core/Src/main.c **** 	DS1307_GetTime(&hours, &minutes, &seconds);
 1271              		.loc 1 619 2 discriminator 1 view .LVU283
 1272 003c 0DF18702 		add	r2, sp, #135
 1273 0040 0DF18601 		add	r1, sp, #134
 1274 0044 0DF18500 		add	r0, sp, #133
 1275 0048 FFF7FEFF 		bl	DS1307_GetTime
 1276              	.LVL106:
 620:Core/Src/main.c **** 	DS1307_GetDate(&day, &month, &year);
 1277              		.loc 1 620 2 discriminator 1 view .LVU284
 1278 004c 20AA     		add	r2, sp, #128
 1279 004e 0DF18301 		add	r1, sp, #131
 1280 0052 21A8     		add	r0, sp, #132
 1281 0054 FFF7FEFF 		bl	DS1307_GetDate
 1282              	.LVL107:
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** 	sprintf(data_to_display_lcd, "%02d:%02d:%02d-%02d/%02d",hours,minutes,seconds,day,month);
 1283              		.loc 1 622 2 discriminator 1 view .LVU285
 1284 0058 9DF88330 		ldrb	r3, [sp, #131]	@ zero_extendqisi2
 1285 005c 0293     		str	r3, [sp, #8]
 1286 005e 9DF88430 		ldrb	r3, [sp, #132]	@ zero_extendqisi2
 1287 0062 0193     		str	r3, [sp, #4]
 1288 0064 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 37


 1289 0068 0093     		str	r3, [sp]
 1290 006a 9DF88630 		ldrb	r3, [sp, #134]	@ zero_extendqisi2
 1291 006e 9DF88520 		ldrb	r2, [sp, #133]	@ zero_extendqisi2
 1292 0072 0A49     		ldr	r1, .L64+8
 1293 0074 07A8     		add	r0, sp, #28
 1294 0076 FFF7FEFF 		bl	sprintf
 1295              	.LVL108:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c **** 	
 625:Core/Src/main.c **** 	lcd_gotoxy(0,0);
 1296              		.loc 1 625 2 discriminator 1 view .LVU286
 1297 007a 0021     		movs	r1, #0
 1298 007c 0846     		mov	r0, r1
 1299 007e FFF7FEFF 		bl	lcd_gotoxy
 1300              	.LVL109:
 626:Core/Src/main.c **** 	lcd_send_string(data_to_display_lcd);
 1301              		.loc 1 626 2 discriminator 1 view .LVU287
 1302 0082 07A8     		add	r0, sp, #28
 1303 0084 FFF7FEFF 		bl	lcd_send_string
 1304              	.LVL110:
 627:Core/Src/main.c **** 	 
 628:Core/Src/main.c **** 	  osDelay(1000);
 1305              		.loc 1 628 4 discriminator 1 view .LVU288
 1306 0088 4FF47A70 		mov	r0, #1000
 1307 008c FFF7FEFF 		bl	osDelay
 1308              	.LVL111:
 617:Core/Src/main.c ****   {
 1309              		.loc 1 617 3 discriminator 1 view .LVU289
 1310 0090 D4E7     		b	.L62
 1311              	.L65:
 1312 0092 00BF     		.align	2
 1313              	.L64:
 1314 0094 1C000000 		.word	.LC8
 1315 0098 20000000 		.word	.LC9
 1316 009c 00000000 		.word	.LC10
 1317              		.cfi_endproc
 1318              	.LFE268:
 1320              		.section	.text.Error_Handler,"ax",%progbits
 1321              		.align	1
 1322              		.global	Error_Handler
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1327              	Error_Handler:
 1328              	.LFB269:
 629:Core/Src/main.c ****   }
 630:Core/Src/main.c ****   /* USER CODE END StartTask3 */
 631:Core/Src/main.c **** }
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** /**
 634:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 635:Core/Src/main.c ****   * @retval None
 636:Core/Src/main.c ****   */
 637:Core/Src/main.c **** void Error_Handler(void)
 638:Core/Src/main.c **** {
 1329              		.loc 1 638 1 view -0
 1330              		.cfi_startproc
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 38


 1331              		@ Volatile: function does not return.
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 639:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 640:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 641:Core/Src/main.c ****   __disable_irq();
 1335              		.loc 1 641 3 view .LVU291
 1336              	.LBB12:
 1337              	.LBI12:
 1338              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 39


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 40


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 41


 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 42


 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 43


 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 44


 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 45


 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 46


 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 47


 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 48


 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 49


 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 50


 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 51


 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 52


 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 53


 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 54


 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 55


 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1339              		.loc 2 960 27 view .LVU292
 1340              	.LBB13:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1341              		.loc 2 962 3 view .LVU293
 1342              		.syntax unified
 1343              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1344 0000 72B6     		cpsid i
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L67:
 1349              	.LBE13:
 1350              	.LBE12:
 642:Core/Src/main.c ****   while (1)
 1351              		.loc 1 642 3 discriminator 1 view .LVU294
 643:Core/Src/main.c ****   {
 644:Core/Src/main.c ****   }
 1352              		.loc 1 644 3 discriminator 1 view .LVU295
 642:Core/Src/main.c ****   while (1)
 1353              		.loc 1 642 9 discriminator 1 view .LVU296
 1354 0002 FEE7     		b	.L67
 1355              		.cfi_endproc
 1356              	.LFE269:
 1358              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1359              		.align	1
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1364              	MX_ADC1_Init:
 1365              	.LFB249:
 212:Core/Src/main.c **** 
 1366              		.loc 1 212 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 16
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370 0000 00B5     		push	{lr}
 1371              	.LCFI29:
 1372              		.cfi_def_cfa_offset 4
 1373              		.cfi_offset 14, -4
 1374 0002 85B0     		sub	sp, sp, #20
 1375              	.LCFI30:
 1376              		.cfi_def_cfa_offset 24
 218:Core/Src/main.c **** 
 1377              		.loc 1 218 3 view .LVU298
 218:Core/Src/main.c **** 
 1378              		.loc 1 218 26 is_stmt 0 view .LVU299
 1379 0004 0023     		movs	r3, #0
 1380 0006 0093     		str	r3, [sp]
 1381 0008 0193     		str	r3, [sp, #4]
 1382 000a 0293     		str	r3, [sp, #8]
 1383 000c 0393     		str	r3, [sp, #12]
 226:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1384              		.loc 1 226 3 is_stmt 1 view .LVU300
 226:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 56


 1385              		.loc 1 226 18 is_stmt 0 view .LVU301
 1386 000e 1448     		ldr	r0, .L74
 1387 0010 144A     		ldr	r2, .L74+4
 1388 0012 0260     		str	r2, [r0]
 227:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1389              		.loc 1 227 3 is_stmt 1 view .LVU302
 227:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1390              		.loc 1 227 29 is_stmt 0 view .LVU303
 1391 0014 4FF48032 		mov	r2, #65536
 1392 0018 4260     		str	r2, [r0, #4]
 228:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1393              		.loc 1 228 3 is_stmt 1 view .LVU304
 228:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1394              		.loc 1 228 25 is_stmt 0 view .LVU305
 1395 001a 8360     		str	r3, [r0, #8]
 229:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1396              		.loc 1 229 3 is_stmt 1 view .LVU306
 229:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1397              		.loc 1 229 27 is_stmt 0 view .LVU307
 1398 001c 0361     		str	r3, [r0, #16]
 230:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1399              		.loc 1 230 3 is_stmt 1 view .LVU308
 230:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1400              		.loc 1 230 33 is_stmt 0 view .LVU309
 1401 001e 0376     		strb	r3, [r0, #24]
 231:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1402              		.loc 1 231 3 is_stmt 1 view .LVU310
 231:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1403              		.loc 1 231 36 is_stmt 0 view .LVU311
 1404 0020 80F82030 		strb	r3, [r0, #32]
 232:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1405              		.loc 1 232 3 is_stmt 1 view .LVU312
 232:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1406              		.loc 1 232 35 is_stmt 0 view .LVU313
 1407 0024 C362     		str	r3, [r0, #44]
 233:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1408              		.loc 1 233 3 is_stmt 1 view .LVU314
 233:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1409              		.loc 1 233 31 is_stmt 0 view .LVU315
 1410 0026 104A     		ldr	r2, .L74+8
 1411 0028 8262     		str	r2, [r0, #40]
 234:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1412              		.loc 1 234 3 is_stmt 1 view .LVU316
 234:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1413              		.loc 1 234 24 is_stmt 0 view .LVU317
 1414 002a C360     		str	r3, [r0, #12]
 235:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1415              		.loc 1 235 3 is_stmt 1 view .LVU318
 235:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1416              		.loc 1 235 30 is_stmt 0 view .LVU319
 1417 002c 0122     		movs	r2, #1
 1418 002e C261     		str	r2, [r0, #28]
 236:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1419              		.loc 1 236 3 is_stmt 1 view .LVU320
 236:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1420              		.loc 1 236 36 is_stmt 0 view .LVU321
 1421 0030 80F83030 		strb	r3, [r0, #48]
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 57


 237:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1422              		.loc 1 237 3 is_stmt 1 view .LVU322
 237:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1423              		.loc 1 237 27 is_stmt 0 view .LVU323
 1424 0034 4261     		str	r2, [r0, #20]
 238:Core/Src/main.c ****   {
 1425              		.loc 1 238 3 is_stmt 1 view .LVU324
 238:Core/Src/main.c ****   {
 1426              		.loc 1 238 7 is_stmt 0 view .LVU325
 1427 0036 FFF7FEFF 		bl	HAL_ADC_Init
 1428              	.LVL112:
 238:Core/Src/main.c ****   {
 1429              		.loc 1 238 6 view .LVU326
 1430 003a 60B9     		cbnz	r0, .L72
 245:Core/Src/main.c ****   sConfig.Rank = 1;
 1431              		.loc 1 245 3 is_stmt 1 view .LVU327
 245:Core/Src/main.c ****   sConfig.Rank = 1;
 1432              		.loc 1 245 19 is_stmt 0 view .LVU328
 1433 003c 0123     		movs	r3, #1
 1434 003e 0093     		str	r3, [sp]
 246:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1435              		.loc 1 246 3 is_stmt 1 view .LVU329
 246:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1436              		.loc 1 246 16 is_stmt 0 view .LVU330
 1437 0040 0193     		str	r3, [sp, #4]
 247:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1438              		.loc 1 247 3 is_stmt 1 view .LVU331
 247:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1439              		.loc 1 247 24 is_stmt 0 view .LVU332
 1440 0042 0023     		movs	r3, #0
 1441 0044 0293     		str	r3, [sp, #8]
 248:Core/Src/main.c ****   {
 1442              		.loc 1 248 3 is_stmt 1 view .LVU333
 248:Core/Src/main.c ****   {
 1443              		.loc 1 248 7 is_stmt 0 view .LVU334
 1444 0046 6946     		mov	r1, sp
 1445 0048 0548     		ldr	r0, .L74
 1446 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1447              	.LVL113:
 248:Core/Src/main.c ****   {
 1448              		.loc 1 248 6 view .LVU335
 1449 004e 20B9     		cbnz	r0, .L73
 256:Core/Src/main.c **** 
 1450              		.loc 1 256 1 view .LVU336
 1451 0050 05B0     		add	sp, sp, #20
 1452              	.LCFI31:
 1453              		.cfi_remember_state
 1454              		.cfi_def_cfa_offset 4
 1455              		@ sp needed
 1456 0052 5DF804FB 		ldr	pc, [sp], #4
 1457              	.L72:
 1458              	.LCFI32:
 1459              		.cfi_restore_state
 240:Core/Src/main.c ****   }
 1460              		.loc 1 240 5 is_stmt 1 view .LVU337
 1461 0056 FFF7FEFF 		bl	Error_Handler
 1462              	.LVL114:
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 58


 1463              	.L73:
 250:Core/Src/main.c ****   }
 1464              		.loc 1 250 5 view .LVU338
 1465 005a FFF7FEFF 		bl	Error_Handler
 1466              	.LVL115:
 1467              	.L75:
 1468 005e 00BF     		.align	2
 1469              	.L74:
 1470 0060 00000000 		.word	.LANCHOR2
 1471 0064 00200140 		.word	1073815552
 1472 0068 0100000F 		.word	251658241
 1473              		.cfi_endproc
 1474              	.LFE249:
 1476              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1477              		.align	1
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1482              	MX_USART3_UART_Init:
 1483              	.LFB251:
 298:Core/Src/main.c **** 
 1484              		.loc 1 298 1 view -0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488 0000 08B5     		push	{r3, lr}
 1489              	.LCFI33:
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 3, -8
 1492              		.cfi_offset 14, -4
 307:Core/Src/main.c ****   huart3.Init.BaudRate = 9600;
 1493              		.loc 1 307 3 view .LVU340
 307:Core/Src/main.c ****   huart3.Init.BaudRate = 9600;
 1494              		.loc 1 307 19 is_stmt 0 view .LVU341
 1495 0002 0A48     		ldr	r0, .L80
 1496 0004 0A4B     		ldr	r3, .L80+4
 1497 0006 0360     		str	r3, [r0]
 308:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1498              		.loc 1 308 3 is_stmt 1 view .LVU342
 308:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1499              		.loc 1 308 24 is_stmt 0 view .LVU343
 1500 0008 4FF41653 		mov	r3, #9600
 1501 000c 4360     		str	r3, [r0, #4]
 309:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1502              		.loc 1 309 3 is_stmt 1 view .LVU344
 309:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1503              		.loc 1 309 26 is_stmt 0 view .LVU345
 1504 000e 0023     		movs	r3, #0
 1505 0010 8360     		str	r3, [r0, #8]
 310:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1506              		.loc 1 310 3 is_stmt 1 view .LVU346
 310:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1507              		.loc 1 310 24 is_stmt 0 view .LVU347
 1508 0012 C360     		str	r3, [r0, #12]
 311:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1509              		.loc 1 311 3 is_stmt 1 view .LVU348
 311:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 59


 1510              		.loc 1 311 22 is_stmt 0 view .LVU349
 1511 0014 0361     		str	r3, [r0, #16]
 312:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1512              		.loc 1 312 3 is_stmt 1 view .LVU350
 312:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1513              		.loc 1 312 20 is_stmt 0 view .LVU351
 1514 0016 0C22     		movs	r2, #12
 1515 0018 4261     		str	r2, [r0, #20]
 313:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1516              		.loc 1 313 3 is_stmt 1 view .LVU352
 313:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1517              		.loc 1 313 25 is_stmt 0 view .LVU353
 1518 001a 8361     		str	r3, [r0, #24]
 314:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1519              		.loc 1 314 3 is_stmt 1 view .LVU354
 314:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1520              		.loc 1 314 28 is_stmt 0 view .LVU355
 1521 001c C361     		str	r3, [r0, #28]
 315:Core/Src/main.c ****   {
 1522              		.loc 1 315 3 is_stmt 1 view .LVU356
 315:Core/Src/main.c ****   {
 1523              		.loc 1 315 7 is_stmt 0 view .LVU357
 1524 001e FFF7FEFF 		bl	HAL_UART_Init
 1525              	.LVL116:
 315:Core/Src/main.c ****   {
 1526              		.loc 1 315 6 view .LVU358
 1527 0022 00B9     		cbnz	r0, .L79
 323:Core/Src/main.c **** 
 1528              		.loc 1 323 1 view .LVU359
 1529 0024 08BD     		pop	{r3, pc}
 1530              	.L79:
 317:Core/Src/main.c ****   }
 1531              		.loc 1 317 5 is_stmt 1 view .LVU360
 1532 0026 FFF7FEFF 		bl	Error_Handler
 1533              	.LVL117:
 1534              	.L81:
 1535 002a 00BF     		.align	2
 1536              	.L80:
 1537 002c 00000000 		.word	.LANCHOR3
 1538 0030 00480040 		.word	1073760256
 1539              		.cfi_endproc
 1540              	.LFE251:
 1542              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1543              		.align	1
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1548              	MX_I2C1_Init:
 1549              	.LFB250:
 264:Core/Src/main.c **** 
 1550              		.loc 1 264 1 view -0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554 0000 08B5     		push	{r3, lr}
 1555              	.LCFI34:
 1556              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 60


 1557              		.cfi_offset 3, -8
 1558              		.cfi_offset 14, -4
 273:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1559              		.loc 1 273 3 view .LVU362
 273:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1560              		.loc 1 273 18 is_stmt 0 view .LVU363
 1561 0002 0A48     		ldr	r0, .L86
 1562 0004 0A4B     		ldr	r3, .L86+4
 1563 0006 0360     		str	r3, [r0]
 274:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1564              		.loc 1 274 3 is_stmt 1 view .LVU364
 274:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1565              		.loc 1 274 25 is_stmt 0 view .LVU365
 1566 0008 0A4B     		ldr	r3, .L86+8
 1567 000a 4360     		str	r3, [r0, #4]
 275:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1568              		.loc 1 275 3 is_stmt 1 view .LVU366
 275:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1569              		.loc 1 275 24 is_stmt 0 view .LVU367
 1570 000c 0023     		movs	r3, #0
 1571 000e 8360     		str	r3, [r0, #8]
 276:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1572              		.loc 1 276 3 is_stmt 1 view .LVU368
 276:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1573              		.loc 1 276 26 is_stmt 0 view .LVU369
 1574 0010 C360     		str	r3, [r0, #12]
 277:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1575              		.loc 1 277 3 is_stmt 1 view .LVU370
 277:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1576              		.loc 1 277 29 is_stmt 0 view .LVU371
 1577 0012 4FF48042 		mov	r2, #16384
 1578 0016 0261     		str	r2, [r0, #16]
 278:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1579              		.loc 1 278 3 is_stmt 1 view .LVU372
 278:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1580              		.loc 1 278 30 is_stmt 0 view .LVU373
 1581 0018 4361     		str	r3, [r0, #20]
 279:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1582              		.loc 1 279 3 is_stmt 1 view .LVU374
 279:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1583              		.loc 1 279 26 is_stmt 0 view .LVU375
 1584 001a 8361     		str	r3, [r0, #24]
 280:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1585              		.loc 1 280 3 is_stmt 1 view .LVU376
 280:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1586              		.loc 1 280 30 is_stmt 0 view .LVU377
 1587 001c C361     		str	r3, [r0, #28]
 281:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1588              		.loc 1 281 3 is_stmt 1 view .LVU378
 281:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1589              		.loc 1 281 28 is_stmt 0 view .LVU379
 1590 001e 0362     		str	r3, [r0, #32]
 282:Core/Src/main.c ****   {
 1591              		.loc 1 282 3 is_stmt 1 view .LVU380
 282:Core/Src/main.c ****   {
 1592              		.loc 1 282 7 is_stmt 0 view .LVU381
 1593 0020 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 61


 1594              	.LVL118:
 282:Core/Src/main.c ****   {
 1595              		.loc 1 282 6 view .LVU382
 1596 0024 00B9     		cbnz	r0, .L85
 290:Core/Src/main.c **** 
 1597              		.loc 1 290 1 view .LVU383
 1598 0026 08BD     		pop	{r3, pc}
 1599              	.L85:
 284:Core/Src/main.c ****   }
 1600              		.loc 1 284 5 is_stmt 1 view .LVU384
 1601 0028 FFF7FEFF 		bl	Error_Handler
 1602              	.LVL119:
 1603              	.L87:
 1604              		.align	2
 1605              	.L86:
 1606 002c 00000000 		.word	.LANCHOR1
 1607 0030 00540040 		.word	1073763328
 1608 0034 A0860100 		.word	100000
 1609              		.cfi_endproc
 1610              	.LFE250:
 1612              		.section	.text.SystemClock_Config,"ax",%progbits
 1613              		.align	1
 1614              		.global	SystemClock_Config
 1615              		.syntax unified
 1616              		.thumb
 1617              		.thumb_func
 1619              	SystemClock_Config:
 1620              	.LFB248:
 166:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1621              		.loc 1 166 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 80
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625 0000 00B5     		push	{lr}
 1626              	.LCFI35:
 1627              		.cfi_def_cfa_offset 4
 1628              		.cfi_offset 14, -4
 1629 0002 95B0     		sub	sp, sp, #84
 1630              	.LCFI36:
 1631              		.cfi_def_cfa_offset 88
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1632              		.loc 1 167 3 view .LVU386
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1633              		.loc 1 167 22 is_stmt 0 view .LVU387
 1634 0004 3022     		movs	r2, #48
 1635 0006 0021     		movs	r1, #0
 1636 0008 08A8     		add	r0, sp, #32
 1637 000a FFF7FEFF 		bl	memset
 1638              	.LVL120:
 168:Core/Src/main.c **** 
 1639              		.loc 1 168 3 is_stmt 1 view .LVU388
 168:Core/Src/main.c **** 
 1640              		.loc 1 168 22 is_stmt 0 view .LVU389
 1641 000e 0023     		movs	r3, #0
 1642 0010 0393     		str	r3, [sp, #12]
 1643 0012 0493     		str	r3, [sp, #16]
 1644 0014 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 62


 1645 0016 0693     		str	r3, [sp, #24]
 1646 0018 0793     		str	r3, [sp, #28]
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1647              		.loc 1 172 3 is_stmt 1 view .LVU390
 1648              	.LBB14:
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1649              		.loc 1 172 3 view .LVU391
 1650 001a 0193     		str	r3, [sp, #4]
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1651              		.loc 1 172 3 view .LVU392
 1652 001c 204A     		ldr	r2, .L94
 1653 001e 116C     		ldr	r1, [r2, #64]
 1654 0020 41F08051 		orr	r1, r1, #268435456
 1655 0024 1164     		str	r1, [r2, #64]
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1656              		.loc 1 172 3 view .LVU393
 1657 0026 126C     		ldr	r2, [r2, #64]
 1658 0028 02F08052 		and	r2, r2, #268435456
 1659 002c 0192     		str	r2, [sp, #4]
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1660              		.loc 1 172 3 view .LVU394
 1661 002e 019A     		ldr	r2, [sp, #4]
 1662              	.LBE14:
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1663              		.loc 1 172 3 view .LVU395
 173:Core/Src/main.c **** 
 1664              		.loc 1 173 3 view .LVU396
 1665              	.LBB15:
 173:Core/Src/main.c **** 
 1666              		.loc 1 173 3 view .LVU397
 1667 0030 0293     		str	r3, [sp, #8]
 173:Core/Src/main.c **** 
 1668              		.loc 1 173 3 view .LVU398
 1669 0032 1C4B     		ldr	r3, .L94+4
 1670 0034 1A68     		ldr	r2, [r3]
 1671 0036 42F48042 		orr	r2, r2, #16384
 1672 003a 1A60     		str	r2, [r3]
 173:Core/Src/main.c **** 
 1673              		.loc 1 173 3 view .LVU399
 1674 003c 1B68     		ldr	r3, [r3]
 1675 003e 03F48043 		and	r3, r3, #16384
 1676 0042 0293     		str	r3, [sp, #8]
 173:Core/Src/main.c **** 
 1677              		.loc 1 173 3 view .LVU400
 1678 0044 029B     		ldr	r3, [sp, #8]
 1679              	.LBE15:
 173:Core/Src/main.c **** 
 1680              		.loc 1 173 3 view .LVU401
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1681              		.loc 1 178 3 view .LVU402
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1682              		.loc 1 178 36 is_stmt 0 view .LVU403
 1683 0046 0123     		movs	r3, #1
 1684 0048 0893     		str	r3, [sp, #32]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1685              		.loc 1 179 3 is_stmt 1 view .LVU404
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 63


 1686              		.loc 1 179 30 is_stmt 0 view .LVU405
 1687 004a 4FF48033 		mov	r3, #65536
 1688 004e 0993     		str	r3, [sp, #36]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1689              		.loc 1 180 3 is_stmt 1 view .LVU406
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1690              		.loc 1 180 34 is_stmt 0 view .LVU407
 1691 0050 0222     		movs	r2, #2
 1692 0052 0E92     		str	r2, [sp, #56]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1693              		.loc 1 181 3 is_stmt 1 view .LVU408
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1694              		.loc 1 181 35 is_stmt 0 view .LVU409
 1695 0054 4FF48003 		mov	r3, #4194304
 1696 0058 0F93     		str	r3, [sp, #60]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1697              		.loc 1 182 3 is_stmt 1 view .LVU410
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1698              		.loc 1 182 30 is_stmt 0 view .LVU411
 1699 005a 0423     		movs	r3, #4
 1700 005c 1093     		str	r3, [sp, #64]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1701              		.loc 1 183 3 is_stmt 1 view .LVU412
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1702              		.loc 1 183 30 is_stmt 0 view .LVU413
 1703 005e A821     		movs	r1, #168
 1704 0060 1191     		str	r1, [sp, #68]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1705              		.loc 1 184 3 is_stmt 1 view .LVU414
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1706              		.loc 1 184 30 is_stmt 0 view .LVU415
 1707 0062 1292     		str	r2, [sp, #72]
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1708              		.loc 1 185 3 is_stmt 1 view .LVU416
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1709              		.loc 1 185 30 is_stmt 0 view .LVU417
 1710 0064 1393     		str	r3, [sp, #76]
 186:Core/Src/main.c ****   {
 1711              		.loc 1 186 3 is_stmt 1 view .LVU418
 186:Core/Src/main.c ****   {
 1712              		.loc 1 186 7 is_stmt 0 view .LVU419
 1713 0066 08A8     		add	r0, sp, #32
 1714 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1715              	.LVL121:
 186:Core/Src/main.c ****   {
 1716              		.loc 1 186 6 view .LVU420
 1717 006c 98B9     		cbnz	r0, .L92
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1718              		.loc 1 193 3 is_stmt 1 view .LVU421
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1719              		.loc 1 193 31 is_stmt 0 view .LVU422
 1720 006e 0F23     		movs	r3, #15
 1721 0070 0393     		str	r3, [sp, #12]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1722              		.loc 1 195 3 is_stmt 1 view .LVU423
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1723              		.loc 1 195 34 is_stmt 0 view .LVU424
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 64


 1724 0072 0223     		movs	r3, #2
 1725 0074 0493     		str	r3, [sp, #16]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1726              		.loc 1 196 3 is_stmt 1 view .LVU425
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1727              		.loc 1 196 35 is_stmt 0 view .LVU426
 1728 0076 0023     		movs	r3, #0
 1729 0078 0593     		str	r3, [sp, #20]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1730              		.loc 1 197 3 is_stmt 1 view .LVU427
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1731              		.loc 1 197 36 is_stmt 0 view .LVU428
 1732 007a 4FF4A053 		mov	r3, #5120
 1733 007e 0693     		str	r3, [sp, #24]
 198:Core/Src/main.c **** 
 1734              		.loc 1 198 3 is_stmt 1 view .LVU429
 198:Core/Src/main.c **** 
 1735              		.loc 1 198 36 is_stmt 0 view .LVU430
 1736 0080 4FF48053 		mov	r3, #4096
 1737 0084 0793     		str	r3, [sp, #28]
 200:Core/Src/main.c ****   {
 1738              		.loc 1 200 3 is_stmt 1 view .LVU431
 200:Core/Src/main.c ****   {
 1739              		.loc 1 200 7 is_stmt 0 view .LVU432
 1740 0086 0521     		movs	r1, #5
 1741 0088 03A8     		add	r0, sp, #12
 1742 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1743              	.LVL122:
 200:Core/Src/main.c ****   {
 1744              		.loc 1 200 6 view .LVU433
 1745 008e 20B9     		cbnz	r0, .L93
 204:Core/Src/main.c **** 
 1746              		.loc 1 204 1 view .LVU434
 1747 0090 15B0     		add	sp, sp, #84
 1748              	.LCFI37:
 1749              		.cfi_remember_state
 1750              		.cfi_def_cfa_offset 4
 1751              		@ sp needed
 1752 0092 5DF804FB 		ldr	pc, [sp], #4
 1753              	.L92:
 1754              	.LCFI38:
 1755              		.cfi_restore_state
 188:Core/Src/main.c ****   }
 1756              		.loc 1 188 5 is_stmt 1 view .LVU435
 1757 0096 FFF7FEFF 		bl	Error_Handler
 1758              	.LVL123:
 1759              	.L93:
 202:Core/Src/main.c ****   }
 1760              		.loc 1 202 5 view .LVU436
 1761 009a FFF7FEFF 		bl	Error_Handler
 1762              	.LVL124:
 1763              	.L95:
 1764 009e 00BF     		.align	2
 1765              	.L94:
 1766 00a0 00380240 		.word	1073887232
 1767 00a4 00700040 		.word	1073770496
 1768              		.cfi_endproc
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 65


 1769              	.LFE248:
 1771              		.section	.text.main,"ax",%progbits
 1772              		.align	1
 1773              		.global	main
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1778              	main:
 1779              	.LFB247:
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1780              		.loc 1 83 1 view -0
 1781              		.cfi_startproc
 1782              		@ Volatile: function does not return.
 1783              		@ args = 0, pretend = 0, frame = 88
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785 0000 00B5     		push	{lr}
 1786              	.LCFI39:
 1787              		.cfi_def_cfa_offset 4
 1788              		.cfi_offset 14, -4
 1789 0002 97B0     		sub	sp, sp, #92
 1790              	.LCFI40:
 1791              		.cfi_def_cfa_offset 96
  91:Core/Src/main.c **** 
 1792              		.loc 1 91 3 view .LVU438
 1793 0004 FFF7FEFF 		bl	HAL_Init
 1794              	.LVL125:
  98:Core/Src/main.c **** 
 1795              		.loc 1 98 3 view .LVU439
 1796 0008 FFF7FEFF 		bl	SystemClock_Config
 1797              	.LVL126:
 105:Core/Src/main.c ****   MX_ADC1_Init();
 1798              		.loc 1 105 3 view .LVU440
 1799 000c FFF7FEFF 		bl	MX_GPIO_Init
 1800              	.LVL127:
 106:Core/Src/main.c ****   MX_USART3_UART_Init();
 1801              		.loc 1 106 3 view .LVU441
 1802 0010 FFF7FEFF 		bl	MX_ADC1_Init
 1803              	.LVL128:
 107:Core/Src/main.c ****   MX_I2C1_Init();
 1804              		.loc 1 107 3 view .LVU442
 1805 0014 FFF7FEFF 		bl	MX_USART3_UART_Init
 1806              	.LVL129:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1807              		.loc 1 108 3 view .LVU443
 1808 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1809              	.LVL130:
 131:Core/Src/main.c ****   Task1Handle = osThreadCreate(osThread(Task1), NULL);
 1810              		.loc 1 131 3 view .LVU444
 1811 001c 1C4C     		ldr	r4, .L99
 1812 001e 0DF13C0C 		add	ip, sp, #60
 1813 0022 04F1300E 		add	lr, r4, #48
 1814 0026 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1815 002a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1816 002e 9EE80700 		ldm	lr, {r0, r1, r2}
 1817 0032 8CE80700 		stm	ip, {r0, r1, r2}
 132:Core/Src/main.c **** 
 1818              		.loc 1 132 3 view .LVU445
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 66


 132:Core/Src/main.c **** 
 1819              		.loc 1 132 17 is_stmt 0 view .LVU446
 1820 0036 0021     		movs	r1, #0
 1821 0038 0FA8     		add	r0, sp, #60
 1822 003a FFF7FEFF 		bl	osThreadCreate
 1823              	.LVL131:
 132:Core/Src/main.c **** 
 1824              		.loc 1 132 15 view .LVU447
 1825 003e 154B     		ldr	r3, .L99+4
 1826 0040 1860     		str	r0, [r3]
 135:Core/Src/main.c ****   Task2Handle = osThreadCreate(osThread(Task2), NULL);
 1827              		.loc 1 135 3 is_stmt 1 view .LVU448
 1828 0042 0DF1200C 		add	ip, sp, #32
 1829 0046 04F14C0E 		add	lr, r4, #76
 1830 004a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1831 004e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1832 0052 9EE80700 		ldm	lr, {r0, r1, r2}
 1833 0056 8CE80700 		stm	ip, {r0, r1, r2}
 136:Core/Src/main.c **** 
 1834              		.loc 1 136 3 view .LVU449
 136:Core/Src/main.c **** 
 1835              		.loc 1 136 17 is_stmt 0 view .LVU450
 1836 005a 0021     		movs	r1, #0
 1837 005c 08A8     		add	r0, sp, #32
 1838 005e FFF7FEFF 		bl	osThreadCreate
 1839              	.LVL132:
 136:Core/Src/main.c **** 
 1840              		.loc 1 136 15 view .LVU451
 1841 0062 0D4B     		ldr	r3, .L99+8
 1842 0064 1860     		str	r0, [r3]
 139:Core/Src/main.c ****   Task3Handle = osThreadCreate(osThread(Task3), NULL);
 1843              		.loc 1 139 3 is_stmt 1 view .LVU452
 1844 0066 0DF1040E 		add	lr, sp, #4
 1845 006a 04F1680C 		add	ip, r4, #104
 1846 006e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1847 0072 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1848 0076 9CE80700 		ldm	ip, {r0, r1, r2}
 1849 007a 8EE80700 		stm	lr, {r0, r1, r2}
 140:Core/Src/main.c **** 
 1850              		.loc 1 140 3 view .LVU453
 140:Core/Src/main.c **** 
 1851              		.loc 1 140 17 is_stmt 0 view .LVU454
 1852 007e 0021     		movs	r1, #0
 1853 0080 01A8     		add	r0, sp, #4
 1854 0082 FFF7FEFF 		bl	osThreadCreate
 1855              	.LVL133:
 140:Core/Src/main.c **** 
 1856              		.loc 1 140 15 view .LVU455
 1857 0086 054B     		ldr	r3, .L99+12
 1858 0088 1860     		str	r0, [r3]
 147:Core/Src/main.c **** 
 1859              		.loc 1 147 3 is_stmt 1 view .LVU456
 1860 008a FFF7FEFF 		bl	osKernelStart
 1861              	.LVL134:
 1862              	.L97:
 152:Core/Src/main.c ****   {
 1863              		.loc 1 152 3 discriminator 1 view .LVU457
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 67


 157:Core/Src/main.c ****   /* USER CODE END 3 */
 1864              		.loc 1 157 3 discriminator 1 view .LVU458
 152:Core/Src/main.c ****   {
 1865              		.loc 1 152 9 discriminator 1 view .LVU459
 1866 008e FEE7     		b	.L97
 1867              	.L100:
 1868              		.align	2
 1869              	.L99:
 1870 0090 00000000 		.word	.LANCHOR0
 1871 0094 00000000 		.word	.LANCHOR4
 1872 0098 00000000 		.word	.LANCHOR5
 1873 009c 00000000 		.word	.LANCHOR6
 1874              		.cfi_endproc
 1875              	.LFE247:
 1877              		.section	.rodata.str1.4,"aMS",%progbits,1
 1878              		.align	2
 1879              	.LC4:
 1880 0000 5461736B 		.ascii	"Task3\000"
 1880      3300
 1881 0006 0000     		.align	2
 1882              	.LC2:
 1883 0008 5461736B 		.ascii	"Task2\000"
 1883      3200
 1884 000e 0000     		.align	2
 1885              	.LC0:
 1886 0010 5461736B 		.ascii	"Task1\000"
 1886      3100
 1887              		.global	LCD_ADDRESS
 1888              		.global	DS1307_ADDRESS_READ
 1889              		.global	DS1307_ADDRESS_WRITE
 1890              		.global	Task3Handle
 1891              		.global	Task2Handle
 1892              		.global	Task1Handle
 1893              		.global	huart3
 1894              		.global	hi2c1
 1895              		.global	hadc1
 1896              		.section	.rodata
 1897              		.align	2
 1898              		.set	.LANCHOR0,. + 0
 1899              	.LC6:
 1900 0000 00080240 		.word	1073874944
 1901 0004 00080240 		.word	1073874944
 1902 0008 00000240 		.word	1073872896
 1903 000c 00000240 		.word	1073872896
 1904 0010 00000240 		.word	1073872896
 1905 0014 00000240 		.word	1073872896
 1906 0018 00080240 		.word	1073874944
 1907 001c 00040240 		.word	1073873920
 1908              	.LC7:
 1909 0020 0100     		.short	1
 1910 0022 0400     		.short	4
 1911 0024 0100     		.short	1
 1912 0026 0400     		.short	4
 1913 0028 1000     		.short	16
 1914 002a 4000     		.short	64
 1915 002c 1000     		.short	16
 1916 002e 0100     		.short	1
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 68


 1917              	.LC11:
 1918 0030 10000000 		.word	.LC0
 1919 0034 00000000 		.word	StartTask1
 1920 0038 0000     		.short	0
 1921 003a 0000     		.space	2
 1922 003c 00000000 		.word	0
 1923 0040 80000000 		.word	128
 1924 0044 00000000 		.word	0
 1925 0048 00000000 		.word	0
 1926              	.LC12:
 1927 004c 08000000 		.word	.LC2
 1928 0050 00000000 		.word	StartTask2
 1929 0054 FDFF     		.short	-3
 1930 0056 0000     		.space	2
 1931 0058 00000000 		.word	0
 1932 005c 80000000 		.word	128
 1933 0060 00000000 		.word	0
 1934 0064 00000000 		.word	0
 1935              	.LC13:
 1936 0068 00000000 		.word	.LC4
 1937 006c 00000000 		.word	StartTask3
 1938 0070 FDFF     		.short	-3
 1939 0072 0000     		.space	2
 1940 0074 00000000 		.word	0
 1941 0078 80000000 		.word	128
 1942 007c 00000000 		.word	0
 1943 0080 00000000 		.word	0
 1944              		.section	.bss.Task1Handle,"aw",%nobits
 1945              		.align	2
 1946              		.set	.LANCHOR4,. + 0
 1949              	Task1Handle:
 1950 0000 00000000 		.space	4
 1951              		.section	.bss.Task2Handle,"aw",%nobits
 1952              		.align	2
 1953              		.set	.LANCHOR5,. + 0
 1956              	Task2Handle:
 1957 0000 00000000 		.space	4
 1958              		.section	.bss.Task3Handle,"aw",%nobits
 1959              		.align	2
 1960              		.set	.LANCHOR6,. + 0
 1963              	Task3Handle:
 1964 0000 00000000 		.space	4
 1965              		.section	.bss.hadc1,"aw",%nobits
 1966              		.align	2
 1967              		.set	.LANCHOR2,. + 0
 1970              	hadc1:
 1971 0000 00000000 		.space	72
 1971      00000000 
 1971      00000000 
 1971      00000000 
 1971      00000000 
 1972              		.section	.bss.hi2c1,"aw",%nobits
 1973              		.align	2
 1974              		.set	.LANCHOR1,. + 0
 1977              	hi2c1:
 1978 0000 00000000 		.space	84
 1978      00000000 
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 69


 1978      00000000 
 1978      00000000 
 1978      00000000 
 1979              		.section	.bss.huart3,"aw",%nobits
 1980              		.align	2
 1981              		.set	.LANCHOR3,. + 0
 1984              	huart3:
 1985 0000 00000000 		.space	72
 1985      00000000 
 1985      00000000 
 1985      00000000 
 1985      00000000 
 1986              		.section	.rodata.DS1307_ADDRESS_READ,"a"
 1989              	DS1307_ADDRESS_READ:
 1990 0000 D1       		.byte	-47
 1991              		.section	.rodata.DS1307_ADDRESS_WRITE,"a"
 1994              	DS1307_ADDRESS_WRITE:
 1995 0000 D0       		.byte	-48
 1996              		.section	.rodata.LCD_ADDRESS,"a"
 1999              	LCD_ADDRESS:
 2000 0000 4E       		.byte	78
 2001              		.text
 2002              	.Letext0:
 2003              		.file 3 "d:\\arm-gcc\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 2004              		.file 4 "d:\\arm-gcc\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 2005              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2006              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2007              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2008              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2009              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2010              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2011              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2012              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2013              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2014              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2015              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 2016              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2017              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2018              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2019              		.file 19 "d:\\arm-gcc\\gcc\\arm-none-eabi\\include\\stdio.h"
 2020              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2021              		.file 21 "<built-in>"
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 70


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:243    .text.MX_GPIO_Init:00000100 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:252    .text.StartTask1:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:258    .text.StartTask1:00000000 StartTask1
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:363    .text.StartTask1:0000007c $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:370    .text.StartTask2:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:376    .text.StartTask2:00000000 StartTask2
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:419    .text.StartTask2:0000002c $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:424    .text.Dec_to_BCD:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:430    .text.Dec_to_BCD:00000000 Dec_to_BCD
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:456    .text.Dec_to_BCD:0000001c $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:461    .text.BCD_to_Dec:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:467    .text.BCD_to_Dec:00000000 BCD_to_Dec
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:491    .text.DS1307_SetTime:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:497    .text.DS1307_SetTime:00000000 DS1307_SetTime
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:562    .text.DS1307_SetTime:00000040 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:567    .text.DS1307_SetDate:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:573    .text.DS1307_SetDate:00000000 DS1307_SetDate
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:636    .text.DS1307_SetDate:00000040 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:641    .text.DS1307_GetTime:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:647    .text.DS1307_GetTime:00000000 DS1307_GetTime
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:731    .text.DS1307_GetTime:00000058 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:736    .text.DS1307_GetDate:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:742    .text.DS1307_GetDate:00000000 DS1307_GetDate
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:829    .text.DS1307_GetDate:00000064 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:834    .text.lcd_write_nibble:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:840    .text.lcd_write_nibble:00000000 lcd_write_nibble
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:902    .text.lcd_write_nibble:00000044 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:907    .text.lcd_send_cmd:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:913    .text.lcd_send_cmd:00000000 lcd_send_cmd
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:949    .text.lcd_send_data:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:955    .text.lcd_send_data:00000000 lcd_send_data
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:991    .text.lcd_init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:997    .text.lcd_init:00000000 lcd_init
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1070   .text.lcd_send_string:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1076   .text.lcd_send_string:00000000 lcd_send_string
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1114   .text.lcd_gotoxy:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1120   .text.lcd_gotoxy:00000000 lcd_gotoxy
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1167   .text.lcd_clear:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1173   .text.lcd_clear:00000000 lcd_clear
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1198   .rodata.StartTask3.str1.4:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1208   .text.StartTask3:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1214   .text.StartTask3:00000000 StartTask3
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1314   .text.StartTask3:00000094 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1321   .text.Error_Handler:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1327   .text.Error_Handler:00000000 Error_Handler
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1359   .text.MX_ADC1_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1364   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1470   .text.MX_ADC1_Init:00000060 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1477   .text.MX_USART3_UART_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1482   .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1537   .text.MX_USART3_UART_Init:0000002c $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1543   .text.MX_I2C1_Init:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1548   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
ARM GAS  C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s 			page 71


C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1606   .text.MX_I2C1_Init:0000002c $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1613   .text.SystemClock_Config:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1619   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1766   .text.SystemClock_Config:000000a0 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1772   .text.main:00000000 $t
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1778   .text.main:00000000 main
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1870   .text.main:00000090 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1878   .rodata.str1.4:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1999   .rodata.LCD_ADDRESS:00000000 LCD_ADDRESS
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1989   .rodata.DS1307_ADDRESS_READ:00000000 DS1307_ADDRESS_READ
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1994   .rodata.DS1307_ADDRESS_WRITE:00000000 DS1307_ADDRESS_WRITE
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1963   .bss.Task3Handle:00000000 Task3Handle
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1956   .bss.Task2Handle:00000000 Task2Handle
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1949   .bss.Task1Handle:00000000 Task1Handle
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1984   .bss.huart3:00000000 huart3
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1977   .bss.hi2c1:00000000 hi2c1
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1970   .bss.hadc1:00000000 hadc1
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1897   .rodata:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1945   .bss.Task1Handle:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1952   .bss.Task2Handle:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1959   .bss.Task3Handle:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1966   .bss.hadc1:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1973   .bss.hi2c1:00000000 $d
C:\Users\Kingj\AppData\Local\Temp\ccplUrAh.s:1980   .bss.huart3:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
HAL_Delay
sprintf
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
